
MPU6050.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00001ea4  00001f38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ea4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006b  00800104  00800104  00001f3c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001f3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00001fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002191  00000000  00000000  00002124  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fc4  00000000  00000000  000042b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ff0  00000000  00000000  00005279  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005dc  00000000  00000000  0000626c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008e2  00000000  00000000  00006848  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000020b5  00000000  00000000  0000712a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  000091df  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__ctors_end>
       4:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       8:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
       c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      10:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      14:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      18:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      1c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      20:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      24:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      28:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      2c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      30:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      34:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      38:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      3c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      40:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      44:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      48:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      4c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      50:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      54:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      58:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      5c:	0c 94 ac 08 	jmp	0x1158	; 0x1158 <__vector_23>
      60:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      64:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__vector_25>
      68:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__vector_26>
      6c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      70:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      74:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      78:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      7c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      80:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      84:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      88:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      8c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      90:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      94:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      98:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      9c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      a0:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      a4:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      a8:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      ac:	03 6e       	ori	r16, 0xE3	; 227
      ae:	db 36       	cpi	r29, 0x6B	; 107
      b0:	3d 9a       	sbi	0x07, 5	; 7
      b2:	99 99       	sbic	0x13, 1	; 19
      b4:	99 3d       	cpi	r25, 0xD9	; 217
      b6:	ab aa       	std	Y+51, r10	; 0x33
      b8:	aa 2a       	or	r10, r26
      ba:	3e 00       	.word	0x003e	; ????
      bc:	00 00       	nop
      be:	80 3f       	cpi	r24, 0xF0	; 240
      c0:	08 4a       	sbci	r16, 0xA8	; 168
      c2:	d7 3b       	cpi	r29, 0xB7	; 183
      c4:	3b ce       	rjmp	.-906    	; 0xfffffd3c <__eeprom_end+0xff7efd3c>
      c6:	01 6e       	ori	r16, 0xE1	; 225
      c8:	84 bc       	out	0x24, r8	; 36
      ca:	bf fd       	.word	0xfdbf	; ????
      cc:	c1 2f       	mov	r28, r17
      ce:	3d 6c       	ori	r19, 0xCD	; 205
      d0:	74 31       	cpi	r23, 0x14	; 20
      d2:	9a bd       	out	0x2a, r25	; 42
      d4:	56 83       	std	Z+6, r21	; 0x06
      d6:	3d da       	rcall	.-2950   	; 0xfffff552 <__eeprom_end+0xff7ef552>
      d8:	3d 00       	.word	0x003d	; ????
      da:	c7 7f       	andi	r28, 0xF7	; 247
      dc:	11 be       	out	0x31, r1	; 49
      de:	d9 e4       	ldi	r29, 0x49	; 73
      e0:	bb 4c       	sbci	r27, 0xCB	; 203
      e2:	3e 91       	ld	r19, -X
      e4:	6b aa       	std	Y+51, r6	; 0x33
      e6:	aa be       	out	0x3a, r10	; 58
      e8:	00 00       	nop
      ea:	00 80       	ld	r0, Z
      ec:	3f 07       	cpc	r19, r31
      ee:	2c 7a       	andi	r18, 0xAC	; 172
      f0:	a5 ba       	out	0x15, r10	; 21
      f2:	6c c5       	rjmp	.+2776   	; 0xbcc <__stack+0xcd>
      f4:	90 da       	rcall	.-2784   	; 0xfffff616 <__eeprom_end+0xff7ef616>
      f6:	3b 93       	.word	0x933b	; ????
      f8:	65 fc       	sbrc	r6, 5
      fa:	8b bc       	out	0x2b, r8	; 43
      fc:	53 f8       	bld	r5, 3
      fe:	10 fd       	sbrc	r17, 0
     100:	3c 56       	subi	r19, 0x6C	; 108
     102:	92 83       	std	Z+2, r25	; 0x02
     104:	4d bd       	out	0x2d, r20	; 45
     106:	87 9d       	mul	r24, r7
     108:	3a b6       	in	r3, 0x3a	; 58
     10a:	3d cb       	rjmp	.-2438   	; 0xfffff786 <__eeprom_end+0xff7ef786>
     10c:	c9 bf       	out	0x39, r28	; 57
     10e:	5b be       	out	0x3b, r5	; 59
     110:	73 da       	rcall	.-2842   	; 0xfffff5f8 <__eeprom_end+0xff7ef5f8>
     112:	0f c9       	rjmp	.-3554   	; 0xfffff332 <__eeprom_end+0xff7ef332>
     114:	3f 00       	.word	0x003f	; ????

00000116 <__ctors_end>:
     116:	11 24       	eor	r1, r1
     118:	1f be       	out	0x3f, r1	; 63
     11a:	cf ef       	ldi	r28, 0xFF	; 255
     11c:	da e0       	ldi	r29, 0x0A	; 10
     11e:	de bf       	out	0x3e, r29	; 62
     120:	cd bf       	out	0x3d, r28	; 61

00000122 <__do_copy_data>:
     122:	11 e0       	ldi	r17, 0x01	; 1
     124:	a0 e0       	ldi	r26, 0x00	; 0
     126:	b1 e0       	ldi	r27, 0x01	; 1
     128:	e4 ea       	ldi	r30, 0xA4	; 164
     12a:	fe e1       	ldi	r31, 0x1E	; 30
     12c:	02 c0       	rjmp	.+4      	; 0x132 <__do_copy_data+0x10>
     12e:	05 90       	lpm	r0, Z+
     130:	0d 92       	st	X+, r0
     132:	a4 30       	cpi	r26, 0x04	; 4
     134:	b1 07       	cpc	r27, r17
     136:	d9 f7       	brne	.-10     	; 0x12e <__do_copy_data+0xc>

00000138 <__do_clear_bss>:
     138:	21 e0       	ldi	r18, 0x01	; 1
     13a:	a4 e0       	ldi	r26, 0x04	; 4
     13c:	b1 e0       	ldi	r27, 0x01	; 1
     13e:	01 c0       	rjmp	.+2      	; 0x142 <.do_clear_bss_start>

00000140 <.do_clear_bss_loop>:
     140:	1d 92       	st	X+, r1

00000142 <.do_clear_bss_start>:
     142:	af 36       	cpi	r26, 0x6F	; 111
     144:	b2 07       	cpc	r27, r18
     146:	e1 f7       	brne	.-8      	; 0x140 <.do_clear_bss_loop>
     148:	0e 94 aa 00 	call	0x154	; 0x154 <main>
     14c:	0c 94 50 0f 	jmp	0x1ea0	; 0x1ea0 <_exit>

00000150 <__bad_interrupt>:
     150:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000154 <main>:
#include "mpu6050.h"

#define UART_BAUD_RATE 57600
#include "uart.h"

int main(void) {
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	cd b7       	in	r28, 0x3d	; 61
     15a:	de b7       	in	r29, 0x3e	; 62
     15c:	6c 97       	sbiw	r28, 0x1c	; 28
     15e:	0f b6       	in	r0, 0x3f	; 63
     160:	f8 94       	cli
     162:	de bf       	out	0x3e, r29	; 62
     164:	0f be       	out	0x3f, r0	; 63
     166:	cd bf       	out	0x3d, r28	; 61
	double gzds = 0;
	#endif

	#if MPU6050_GETATTITUDE == 1 || MPU6050_GETATTITUDE == 2
	long *ptr = 0;
	double qw = 1.0f;
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	a0 e8       	ldi	r26, 0x80	; 128
     16e:	bf e3       	ldi	r27, 0x3F	; 63
     170:	89 83       	std	Y+1, r24	; 0x01
     172:	9a 83       	std	Y+2, r25	; 0x02
     174:	ab 83       	std	Y+3, r26	; 0x03
     176:	bc 83       	std	Y+4, r27	; 0x04
	double qx = 0.0f;
     178:	1d 82       	std	Y+5, r1	; 0x05
     17a:	1e 82       	std	Y+6, r1	; 0x06
     17c:	1f 82       	std	Y+7, r1	; 0x07
     17e:	18 86       	std	Y+8, r1	; 0x08
	double qy = 0.0f;
     180:	19 86       	std	Y+9, r1	; 0x09
     182:	1a 86       	std	Y+10, r1	; 0x0a
     184:	1b 86       	std	Y+11, r1	; 0x0b
     186:	1c 86       	std	Y+12, r1	; 0x0c
	double qz = 0.0f;
     188:	1d 86       	std	Y+13, r1	; 0x0d
     18a:	1e 86       	std	Y+14, r1	; 0x0e
     18c:	1f 86       	std	Y+15, r1	; 0x0f
     18e:	18 8a       	std	Y+16, r1	; 0x10
	double roll = 0.0f;
     190:	19 8a       	std	Y+17, r1	; 0x11
     192:	1a 8a       	std	Y+18, r1	; 0x12
     194:	1b 8a       	std	Y+19, r1	; 0x13
     196:	1c 8a       	std	Y+20, r1	; 0x14
	double pitch = 0.0f;
     198:	1d 8a       	std	Y+21, r1	; 0x15
     19a:	1e 8a       	std	Y+22, r1	; 0x16
     19c:	1f 8a       	std	Y+23, r1	; 0x17
     19e:	18 8e       	std	Y+24, r1	; 0x18
	double yaw = 0.0f;
     1a0:	19 8e       	std	Y+25, r1	; 0x19
     1a2:	1a 8e       	std	Y+26, r1	; 0x1a
     1a4:	1b 8e       	std	Y+27, r1	; 0x1b
     1a6:	1c 8e       	std	Y+28, r1	; 0x1c
	#endif

	//init uart
	uart_init(UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU));
     1a8:	80 e1       	ldi	r24, 0x10	; 16
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <uart_init>

	//init interrupt
	sei();
     1b0:	78 94       	sei

	//init mpu6050
	mpu6050_init();
     1b2:	0e 94 81 02 	call	0x502	; 0x502 <mpu6050_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1b6:	2f ef       	ldi	r18, 0xFF	; 255
     1b8:	80 e7       	ldi	r24, 0x70	; 112
     1ba:	92 e0       	ldi	r25, 0x02	; 2
     1bc:	21 50       	subi	r18, 0x01	; 1
     1be:	80 40       	sbci	r24, 0x00	; 0
     1c0:	90 40       	sbci	r25, 0x00	; 0
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x68>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x72>
     1c6:	00 00       	nop
		mpu6050_getRawData(&ax, &ay, &az, &gx, &gy, &gz);
		mpu6050_getConvData(&axg, &ayg, &azg, &gxds, &gyds, &gzds);
		#endif

		#if MPU6050_GETATTITUDE == 1
		mpu6050_getQuaternion(&qw, &qx, &qy, &qz);
     1c8:	9e 01       	movw	r18, r28
     1ca:	23 5f       	subi	r18, 0xF3	; 243
     1cc:	3f 4f       	sbci	r19, 0xFF	; 255
     1ce:	ae 01       	movw	r20, r28
     1d0:	47 5f       	subi	r20, 0xF7	; 247
     1d2:	5f 4f       	sbci	r21, 0xFF	; 255
     1d4:	be 01       	movw	r22, r28
     1d6:	6b 5f       	subi	r22, 0xFB	; 251
     1d8:	7f 4f       	sbci	r23, 0xFF	; 255
     1da:	ce 01       	movw	r24, r28
     1dc:	01 96       	adiw	r24, 0x01	; 1
     1de:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <mpu6050_getQuaternion>
		mpu6050_getRollPitchYaw(&roll, &pitch, &yaw);
     1e2:	ae 01       	movw	r20, r28
     1e4:	47 5e       	subi	r20, 0xE7	; 231
     1e6:	5f 4f       	sbci	r21, 0xFF	; 255
     1e8:	be 01       	movw	r22, r28
     1ea:	6b 5e       	subi	r22, 0xEB	; 235
     1ec:	7f 4f       	sbci	r23, 0xFF	; 255
     1ee:	ce 01       	movw	r24, r28
     1f0:	41 96       	adiw	r24, 0x11	; 17
     1f2:	0e 94 0d 09 	call	0x121a	; 0x121a <mpu6050_getRollPitchYaw>
     1f6:	8f e3       	ldi	r24, 0x3F	; 63
     1f8:	9c e9       	ldi	r25, 0x9C	; 156
     1fa:	01 97       	sbiw	r24, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <main+0xa6>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0xac>
     200:	00 00       	nop

		#if MPU6050_GETATTITUDE == 1 || MPU6050_GETATTITUDE == 2

		//quaternion
		ptr = (long *)(&qw);
		uart_putc(*ptr);
     202:	89 81       	ldd	r24, Y+1	; 0x01
     204:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>8);
     208:	8a 81       	ldd	r24, Y+2	; 0x02
     20a:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>16);
     20e:	8b 81       	ldd	r24, Y+3	; 0x03
     210:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>24);
     214:	8c 81       	ldd	r24, Y+4	; 0x04
     216:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		ptr = (long *)(&qx);
		uart_putc(*ptr);
     21a:	8d 81       	ldd	r24, Y+5	; 0x05
     21c:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>8);
     220:	8e 81       	ldd	r24, Y+6	; 0x06
     222:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>16);
     226:	8f 81       	ldd	r24, Y+7	; 0x07
     228:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>24);
     22c:	88 85       	ldd	r24, Y+8	; 0x08
     22e:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		ptr = (long *)(&qy);
		uart_putc(*ptr);
     232:	89 85       	ldd	r24, Y+9	; 0x09
     234:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>8);
     238:	8a 85       	ldd	r24, Y+10	; 0x0a
     23a:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>16);
     23e:	8b 85       	ldd	r24, Y+11	; 0x0b
     240:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>24);
     244:	8c 85       	ldd	r24, Y+12	; 0x0c
     246:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		ptr = (long *)(&qz);
		uart_putc(*ptr);
     24a:	8d 85       	ldd	r24, Y+13	; 0x0d
     24c:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>8);
     250:	8e 85       	ldd	r24, Y+14	; 0x0e
     252:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>16);
     256:	8f 85       	ldd	r24, Y+15	; 0x0f
     258:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>24);
     25c:	88 89       	ldd	r24, Y+16	; 0x10
     25e:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>

		//roll pitch yaw
		ptr = (long *)(&roll);
		uart_putc(*ptr);
     262:	89 89       	ldd	r24, Y+17	; 0x11
     264:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>8);
     268:	8a 89       	ldd	r24, Y+18	; 0x12
     26a:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>16);
     26e:	8b 89       	ldd	r24, Y+19	; 0x13
     270:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>24);
     274:	8c 89       	ldd	r24, Y+20	; 0x14
     276:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		ptr = (long *)(&pitch);
		uart_putc(*ptr);
     27a:	8d 89       	ldd	r24, Y+21	; 0x15
     27c:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>8);
     280:	8e 89       	ldd	r24, Y+22	; 0x16
     282:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>16);
     286:	8f 89       	ldd	r24, Y+23	; 0x17
     288:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>24);
     28c:	88 8d       	ldd	r24, Y+24	; 0x18
     28e:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		ptr = (long *)(&yaw);
		uart_putc(*ptr);
     292:	89 8d       	ldd	r24, Y+25	; 0x19
     294:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>8);
     298:	8a 8d       	ldd	r24, Y+26	; 0x1a
     29a:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>16);
     29e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2a0:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
		uart_putc(*ptr>>24);
     2a4:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2a6:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>

		uart_putc('\n');
     2aa:	8a e0       	ldi	r24, 0x0A	; 10
     2ac:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <uart_putc>
     2b0:	8b cf       	rjmp	.-234    	; 0x1c8 <main+0x74>

000002b2 <mpu6050_readBytes>:
    *azg = (double)(az)/MPU6050_AGAIN;
    *gxds = (double)(gx)/MPU6050_GGAIN;
	*gyds = (double)(gy)/MPU6050_GGAIN;
	*gzds = (double)(gz)/MPU6050_GGAIN;
	#endif
}
     2b2:	af 92       	push	r10
     2b4:	bf 92       	push	r11
     2b6:	cf 92       	push	r12
     2b8:	df 92       	push	r13
     2ba:	ff 92       	push	r15
     2bc:	0f 93       	push	r16
     2be:	1f 93       	push	r17
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
     2c4:	66 23       	and	r22, r22
     2c6:	b9 f1       	breq	.+110    	; 0x336 <mpu6050_readBytes+0x84>
     2c8:	c5 2f       	mov	r28, r21
     2ca:	d4 2f       	mov	r29, r20
     2cc:	f6 2e       	mov	r15, r22
     2ce:	18 2f       	mov	r17, r24
     2d0:	80 ed       	ldi	r24, 0xD0	; 208
     2d2:	0e 94 cd 0a 	call	0x159a	; 0x159a <i2c_start>
     2d6:	81 2f       	mov	r24, r17
     2d8:	0e 94 23 0b 	call	0x1646	; 0x1646 <i2c_write>
     2dc:	85 e3       	ldi	r24, 0x35	; 53
     2de:	8a 95       	dec	r24
     2e0:	f1 f7       	brne	.-4      	; 0x2de <mpu6050_readBytes+0x2c>
     2e2:	00 00       	nop
     2e4:	81 ed       	ldi	r24, 0xD1	; 209
     2e6:	0e 94 cd 0a 	call	0x159a	; 0x159a <i2c_start>
     2ea:	0d 2f       	mov	r16, r29
     2ec:	1c 2f       	mov	r17, r28
     2ee:	cc 24       	eor	r12, r12
     2f0:	ca 94       	dec	r12
     2f2:	cf 0c       	add	r12, r15
     2f4:	d1 2c       	mov	r13, r1
     2f6:	ef ef       	ldi	r30, 0xFF	; 255
     2f8:	ce 1a       	sub	r12, r30
     2fa:	de 0a       	sbc	r13, r30
     2fc:	c0 e0       	ldi	r28, 0x00	; 0
     2fe:	d0 e0       	ldi	r29, 0x00	; 0
     300:	af 2c       	mov	r10, r15
     302:	b1 2c       	mov	r11, r1
     304:	f1 e0       	ldi	r31, 0x01	; 1
     306:	af 1a       	sub	r10, r31
     308:	b1 08       	sbc	r11, r1
     30a:	ac 16       	cp	r10, r28
     30c:	bd 06       	cpc	r11, r29
     30e:	29 f4       	brne	.+10     	; 0x31a <mpu6050_readBytes+0x68>
     310:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <i2c_readNak>
     314:	f8 01       	movw	r30, r16
     316:	80 83       	st	Z, r24
     318:	04 c0       	rjmp	.+8      	; 0x322 <mpu6050_readBytes+0x70>
     31a:	0e 94 44 0b 	call	0x1688	; 0x1688 <i2c_readAck>
     31e:	f8 01       	movw	r30, r16
     320:	80 83       	st	Z, r24
     322:	21 96       	adiw	r28, 0x01	; 1
     324:	0f 5f       	subi	r16, 0xFF	; 255
     326:	1f 4f       	sbci	r17, 0xFF	; 255
     328:	cc 15       	cp	r28, r12
     32a:	dd 05       	cpc	r29, r13
     32c:	71 f7       	brne	.-36     	; 0x30a <mpu6050_readBytes+0x58>
     32e:	cf 2d       	mov	r28, r15
     330:	0e 94 13 0b 	call	0x1626	; 0x1626 <i2c_stop>
     334:	01 c0       	rjmp	.+2      	; 0x338 <mpu6050_readBytes+0x86>
     336:	c0 e0       	ldi	r28, 0x00	; 0
     338:	8c 2f       	mov	r24, r28
     33a:	df 91       	pop	r29
     33c:	cf 91       	pop	r28
     33e:	1f 91       	pop	r17
     340:	0f 91       	pop	r16
     342:	ff 90       	pop	r15
     344:	df 90       	pop	r13
     346:	cf 90       	pop	r12
     348:	bf 90       	pop	r11
     34a:	af 90       	pop	r10
     34c:	08 95       	ret

0000034e <mpu6050_readByte>:
     34e:	ab 01       	movw	r20, r22
     350:	61 e0       	ldi	r22, 0x01	; 1
     352:	0e 94 59 01 	call	0x2b2	; 0x2b2 <mpu6050_readBytes>
     356:	08 95       	ret

00000358 <mpu6050_writeBytes>:
     358:	ef 92       	push	r14
     35a:	ff 92       	push	r15
     35c:	0f 93       	push	r16
     35e:	1f 93       	push	r17
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	66 23       	and	r22, r22
     366:	d1 f0       	breq	.+52     	; 0x39c <mpu6050_writeBytes+0x44>
     368:	7a 01       	movw	r14, r20
     36a:	16 2f       	mov	r17, r22
     36c:	c8 2f       	mov	r28, r24
     36e:	80 ed       	ldi	r24, 0xD0	; 208
     370:	0e 94 cd 0a 	call	0x159a	; 0x159a <i2c_start>
     374:	8c 2f       	mov	r24, r28
     376:	0e 94 23 0b 	call	0x1646	; 0x1646 <i2c_write>
     37a:	e7 01       	movw	r28, r14
     37c:	6f ef       	ldi	r22, 0xFF	; 255
     37e:	61 0f       	add	r22, r17
     380:	06 2f       	mov	r16, r22
     382:	10 e0       	ldi	r17, 0x00	; 0
     384:	0f 5f       	subi	r16, 0xFF	; 255
     386:	1f 4f       	sbci	r17, 0xFF	; 255
     388:	0e 0d       	add	r16, r14
     38a:	1f 1d       	adc	r17, r15
     38c:	89 91       	ld	r24, Y+
     38e:	0e 94 23 0b 	call	0x1646	; 0x1646 <i2c_write>
     392:	c0 17       	cp	r28, r16
     394:	d1 07       	cpc	r29, r17
     396:	d1 f7       	brne	.-12     	; 0x38c <mpu6050_writeBytes+0x34>
     398:	0e 94 13 0b 	call	0x1626	; 0x1626 <i2c_stop>
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	1f 91       	pop	r17
     3a2:	0f 91       	pop	r16
     3a4:	ff 90       	pop	r15
     3a6:	ef 90       	pop	r14
     3a8:	08 95       	ret

000003aa <mpu6050_writeByte>:
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	1f 92       	push	r1
     3b0:	cd b7       	in	r28, 0x3d	; 61
     3b2:	de b7       	in	r29, 0x3e	; 62
     3b4:	69 83       	std	Y+1, r22	; 0x01
     3b6:	ae 01       	movw	r20, r28
     3b8:	4f 5f       	subi	r20, 0xFF	; 255
     3ba:	5f 4f       	sbci	r21, 0xFF	; 255
     3bc:	61 e0       	ldi	r22, 0x01	; 1
     3be:	0e 94 ac 01 	call	0x358	; 0x358 <mpu6050_writeBytes>
     3c2:	0f 90       	pop	r0
     3c4:	df 91       	pop	r29
     3c6:	cf 91       	pop	r28
     3c8:	08 95       	ret

000003ca <mpu6050_readBit>:
     3ca:	ff 92       	push	r15
     3cc:	0f 93       	push	r16
     3ce:	1f 93       	push	r17
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	1f 92       	push	r1
     3d6:	cd b7       	in	r28, 0x3d	; 61
     3d8:	de b7       	in	r29, 0x3e	; 62
     3da:	f6 2e       	mov	r15, r22
     3dc:	8a 01       	movw	r16, r20
     3de:	be 01       	movw	r22, r28
     3e0:	6f 5f       	subi	r22, 0xFF	; 255
     3e2:	7f 4f       	sbci	r23, 0xFF	; 255
     3e4:	0e 94 a7 01 	call	0x34e	; 0x34e <mpu6050_readByte>
     3e8:	21 e0       	ldi	r18, 0x01	; 1
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <mpu6050_readBit+0x28>
     3ee:	22 0f       	add	r18, r18
     3f0:	33 1f       	adc	r19, r19
     3f2:	fa 94       	dec	r15
     3f4:	e2 f7       	brpl	.-8      	; 0x3ee <mpu6050_readBit+0x24>
     3f6:	99 81       	ldd	r25, Y+1	; 0x01
     3f8:	29 23       	and	r18, r25
     3fa:	f8 01       	movw	r30, r16
     3fc:	20 83       	st	Z, r18
     3fe:	0f 90       	pop	r0
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	1f 91       	pop	r17
     406:	0f 91       	pop	r16
     408:	ff 90       	pop	r15
     40a:	08 95       	ret

0000040c <mpu6050_writeBits>:
     40c:	ef 92       	push	r14
     40e:	ff 92       	push	r15
     410:	0f 93       	push	r16
     412:	1f 93       	push	r17
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	1f 92       	push	r1
     41a:	cd b7       	in	r28, 0x3d	; 61
     41c:	de b7       	in	r29, 0x3e	; 62
     41e:	44 23       	and	r20, r20
     420:	89 f1       	breq	.+98     	; 0x484 <mpu6050_writeBits+0x78>
     422:	f2 2e       	mov	r15, r18
     424:	14 2f       	mov	r17, r20
     426:	06 2f       	mov	r16, r22
     428:	e8 2e       	mov	r14, r24
     42a:	19 82       	std	Y+1, r1	; 0x01
     42c:	be 01       	movw	r22, r28
     42e:	6f 5f       	subi	r22, 0xFF	; 255
     430:	7f 4f       	sbci	r23, 0xFF	; 255
     432:	0e 94 a7 01 	call	0x34e	; 0x34e <mpu6050_readByte>
     436:	88 23       	and	r24, r24
     438:	29 f1       	breq	.+74     	; 0x484 <mpu6050_writeBits+0x78>
     43a:	40 2f       	mov	r20, r16
     43c:	50 e0       	ldi	r21, 0x00	; 0
     43e:	41 1b       	sub	r20, r17
     440:	51 09       	sbc	r21, r1
     442:	4f 5f       	subi	r20, 0xFF	; 255
     444:	5f 4f       	sbci	r21, 0xFF	; 255
     446:	81 e0       	ldi	r24, 0x01	; 1
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	02 c0       	rjmp	.+4      	; 0x450 <mpu6050_writeBits+0x44>
     44c:	88 0f       	add	r24, r24
     44e:	99 1f       	adc	r25, r25
     450:	1a 95       	dec	r17
     452:	e2 f7       	brpl	.-8      	; 0x44c <mpu6050_writeBits+0x40>
     454:	01 97       	sbiw	r24, 0x01	; 1
     456:	04 2e       	mov	r0, r20
     458:	02 c0       	rjmp	.+4      	; 0x45e <mpu6050_writeBits+0x52>
     45a:	88 0f       	add	r24, r24
     45c:	99 1f       	adc	r25, r25
     45e:	0a 94       	dec	r0
     460:	e2 f7       	brpl	.-8      	; 0x45a <mpu6050_writeBits+0x4e>
     462:	2f 2d       	mov	r18, r15
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	02 c0       	rjmp	.+4      	; 0x46c <mpu6050_writeBits+0x60>
     468:	22 0f       	add	r18, r18
     46a:	33 1f       	adc	r19, r19
     46c:	4a 95       	dec	r20
     46e:	e2 f7       	brpl	.-8      	; 0x468 <mpu6050_writeBits+0x5c>
     470:	68 2f       	mov	r22, r24
     472:	60 95       	com	r22
     474:	99 81       	ldd	r25, Y+1	; 0x01
     476:	69 23       	and	r22, r25
     478:	82 23       	and	r24, r18
     47a:	68 2b       	or	r22, r24
     47c:	69 83       	std	Y+1, r22	; 0x01
     47e:	8e 2d       	mov	r24, r14
     480:	0e 94 d5 01 	call	0x3aa	; 0x3aa <mpu6050_writeByte>
     484:	0f 90       	pop	r0
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	1f 91       	pop	r17
     48c:	0f 91       	pop	r16
     48e:	ff 90       	pop	r15
     490:	ef 90       	pop	r14
     492:	08 95       	ret

00000494 <mpu6050_writeBit>:
     494:	ff 92       	push	r15
     496:	0f 93       	push	r16
     498:	1f 93       	push	r17
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	1f 92       	push	r1
     4a0:	cd b7       	in	r28, 0x3d	; 61
     4a2:	de b7       	in	r29, 0x3e	; 62
     4a4:	18 2f       	mov	r17, r24
     4a6:	06 2f       	mov	r16, r22
     4a8:	f4 2e       	mov	r15, r20
     4aa:	be 01       	movw	r22, r28
     4ac:	6f 5f       	subi	r22, 0xFF	; 255
     4ae:	7f 4f       	sbci	r23, 0xFF	; 255
     4b0:	0e 94 a7 01 	call	0x34e	; 0x34e <mpu6050_readByte>
     4b4:	ff 20       	and	r15, r15
     4b6:	51 f0       	breq	.+20     	; 0x4cc <mpu6050_writeBit+0x38>
     4b8:	61 e0       	ldi	r22, 0x01	; 1
     4ba:	70 e0       	ldi	r23, 0x00	; 0
     4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <mpu6050_writeBit+0x2e>
     4be:	66 0f       	add	r22, r22
     4c0:	77 1f       	adc	r23, r23
     4c2:	0a 95       	dec	r16
     4c4:	e2 f7       	brpl	.-8      	; 0x4be <mpu6050_writeBit+0x2a>
     4c6:	89 81       	ldd	r24, Y+1	; 0x01
     4c8:	68 2b       	or	r22, r24
     4ca:	0a c0       	rjmp	.+20     	; 0x4e0 <mpu6050_writeBit+0x4c>
     4cc:	61 e0       	ldi	r22, 0x01	; 1
     4ce:	70 e0       	ldi	r23, 0x00	; 0
     4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <mpu6050_writeBit+0x42>
     4d2:	66 0f       	add	r22, r22
     4d4:	77 1f       	adc	r23, r23
     4d6:	0a 95       	dec	r16
     4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <mpu6050_writeBit+0x3e>
     4da:	60 95       	com	r22
     4dc:	89 81       	ldd	r24, Y+1	; 0x01
     4de:	68 23       	and	r22, r24
     4e0:	69 83       	std	Y+1, r22	; 0x01
     4e2:	81 2f       	mov	r24, r17
     4e4:	0e 94 d5 01 	call	0x3aa	; 0x3aa <mpu6050_writeByte>
     4e8:	0f 90       	pop	r0
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	1f 91       	pop	r17
     4f0:	0f 91       	pop	r16
     4f2:	ff 90       	pop	r15
     4f4:	08 95       	ret

000004f6 <mpu6050_setSleepDisabled>:
     4f6:	40 e0       	ldi	r20, 0x00	; 0
     4f8:	66 e0       	ldi	r22, 0x06	; 6
     4fa:	8b e6       	ldi	r24, 0x6B	; 107
     4fc:	0e 94 4a 02 	call	0x494	; 0x494 <mpu6050_writeBit>
     500:	08 95       	ret

00000502 <mpu6050_init>:
     502:	0e 94 c7 0a 	call	0x158e	; 0x158e <i2c_init>
     506:	25 e3       	ldi	r18, 0x35	; 53
     508:	2a 95       	dec	r18
     50a:	f1 f7       	brne	.-4      	; 0x508 <mpu6050_init+0x6>
     50c:	00 00       	nop
     50e:	8f ef       	ldi	r24, 0xFF	; 255
     510:	91 ee       	ldi	r25, 0xE1	; 225
     512:	24 e0       	ldi	r18, 0x04	; 4
     514:	81 50       	subi	r24, 0x01	; 1
     516:	90 40       	sbci	r25, 0x00	; 0
     518:	20 40       	sbci	r18, 0x00	; 0
     51a:	e1 f7       	brne	.-8      	; 0x514 <mpu6050_init+0x12>
     51c:	00 c0       	rjmp	.+0      	; 0x51e <mpu6050_init+0x1c>
     51e:	00 00       	nop
     520:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <mpu6050_setSleepDisabled>
     524:	8f e3       	ldi	r24, 0x3F	; 63
     526:	9c e9       	ldi	r25, 0x9C	; 156
     528:	01 97       	sbiw	r24, 0x01	; 1
     52a:	f1 f7       	brne	.-4      	; 0x528 <mpu6050_init+0x26>
     52c:	00 c0       	rjmp	.+0      	; 0x52e <mpu6050_init+0x2c>
     52e:	00 00       	nop
     530:	21 e0       	ldi	r18, 0x01	; 1
     532:	43 e0       	ldi	r20, 0x03	; 3
     534:	62 e0       	ldi	r22, 0x02	; 2
     536:	8b e6       	ldi	r24, 0x6B	; 107
     538:	0e 94 06 02 	call	0x40c	; 0x40c <mpu6050_writeBits>
     53c:	23 e0       	ldi	r18, 0x03	; 3
     53e:	43 e0       	ldi	r20, 0x03	; 3
     540:	62 e0       	ldi	r22, 0x02	; 2
     542:	8a e1       	ldi	r24, 0x1A	; 26
     544:	0e 94 06 02 	call	0x40c	; 0x40c <mpu6050_writeBits>
     548:	64 e0       	ldi	r22, 0x04	; 4
     54a:	89 e1       	ldi	r24, 0x19	; 25
     54c:	0e 94 d5 01 	call	0x3aa	; 0x3aa <mpu6050_writeByte>
     550:	23 e0       	ldi	r18, 0x03	; 3
     552:	42 e0       	ldi	r20, 0x02	; 2
     554:	64 e0       	ldi	r22, 0x04	; 4
     556:	8b e1       	ldi	r24, 0x1B	; 27
     558:	0e 94 06 02 	call	0x40c	; 0x40c <mpu6050_writeBits>
     55c:	20 e0       	ldi	r18, 0x00	; 0
     55e:	42 e0       	ldi	r20, 0x02	; 2
     560:	64 e0       	ldi	r22, 0x04	; 4
     562:	8c e1       	ldi	r24, 0x1C	; 28
     564:	0e 94 06 02 	call	0x40c	; 0x40c <mpu6050_writeBits>
     568:	85 b5       	in	r24, 0x25	; 37
     56a:	85 60       	ori	r24, 0x05	; 5
     56c:	85 bd       	out	0x25, r24	; 37
     56e:	ee e6       	ldi	r30, 0x6E	; 110
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	80 81       	ld	r24, Z
     574:	81 60       	ori	r24, 0x01	; 1
     576:	80 83       	st	Z, r24
     578:	08 95       	ret

0000057a <mpu6050_mahonyUpdate>:
volatile float q0 = 1.0f, q1 = 0.0f, q2 = 0.0f, q3 = 0.0f;
volatile float integralFBx = 0.0f,  integralFBy = 0.0f, integralFBz = 0.0f;
/*
 * Mahony update function (for 6DOF)
 */
void mpu6050_mahonyUpdate(float gx, float gy, float gz, float ax, float ay, float az) {
     57a:	4f 92       	push	r4
     57c:	5f 92       	push	r5
     57e:	6f 92       	push	r6
     580:	7f 92       	push	r7
     582:	8f 92       	push	r8
     584:	9f 92       	push	r9
     586:	af 92       	push	r10
     588:	bf 92       	push	r11
     58a:	cf 92       	push	r12
     58c:	df 92       	push	r13
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	cd b7       	in	r28, 0x3d	; 61
     59c:	de b7       	in	r29, 0x3e	; 62
     59e:	a4 97       	sbiw	r28, 0x24	; 36
     5a0:	0f b6       	in	r0, 0x3f	; 63
     5a2:	f8 94       	cli
     5a4:	de bf       	out	0x3e, r29	; 62
     5a6:	0f be       	out	0x3f, r0	; 63
     5a8:	cd bf       	out	0x3d, r28	; 61
     5aa:	6d 87       	std	Y+13, r22	; 0x0d
     5ac:	7e 87       	std	Y+14, r23	; 0x0e
     5ae:	8f 87       	std	Y+15, r24	; 0x0f
     5b0:	98 8b       	std	Y+16, r25	; 0x10
     5b2:	29 8b       	std	Y+17, r18	; 0x11
     5b4:	3a 8b       	std	Y+18, r19	; 0x12
     5b6:	4b 8b       	std	Y+19, r20	; 0x13
     5b8:	5c 8b       	std	Y+20, r21	; 0x14
     5ba:	ed 8a       	std	Y+21, r14	; 0x15
     5bc:	fe 8a       	std	Y+22, r15	; 0x16
     5be:	0f 8b       	std	Y+23, r16	; 0x17
     5c0:	18 8f       	std	Y+24, r17	; 0x18
	float halfvx, halfvy, halfvz;
	float halfex, halfey, halfez;
	float qa, qb, qc;

	// Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
	if(!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f))) {
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	a9 01       	movw	r20, r18
     5c8:	c6 01       	movw	r24, r12
     5ca:	b5 01       	movw	r22, r10
     5cc:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__cmpsf2>
     5d0:	81 11       	cpse	r24, r1
     5d2:	17 c0       	rjmp	.+46     	; 0x602 <mpu6050_mahonyUpdate+0x88>
     5d4:	20 e0       	ldi	r18, 0x00	; 0
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	a9 01       	movw	r20, r18
     5da:	6f a9       	ldd	r22, Y+55	; 0x37
     5dc:	78 ad       	ldd	r23, Y+56	; 0x38
     5de:	89 ad       	ldd	r24, Y+57	; 0x39
     5e0:	9a ad       	ldd	r25, Y+58	; 0x3a
     5e2:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__cmpsf2>
     5e6:	81 11       	cpse	r24, r1
     5e8:	0c c0       	rjmp	.+24     	; 0x602 <mpu6050_mahonyUpdate+0x88>
     5ea:	20 e0       	ldi	r18, 0x00	; 0
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	a9 01       	movw	r20, r18
     5f0:	6b ad       	ldd	r22, Y+59	; 0x3b
     5f2:	7c ad       	ldd	r23, Y+60	; 0x3c
     5f4:	8d ad       	ldd	r24, Y+61	; 0x3d
     5f6:	9e ad       	ldd	r25, Y+62	; 0x3e
     5f8:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__cmpsf2>
     5fc:	88 23       	and	r24, r24
     5fe:	09 f4       	brne	.+2      	; 0x602 <mpu6050_mahonyUpdate+0x88>
     600:	1a c2       	rjmp	.+1076   	; 0xa36 <mpu6050_mahonyUpdate+0x4bc>

		// Normalise accelerometer measurement
		norm = sqrt(ax * ax + ay * ay + az * az);
     602:	a6 01       	movw	r20, r12
     604:	95 01       	movw	r18, r10
     606:	c6 01       	movw	r24, r12
     608:	b5 01       	movw	r22, r10
     60a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     60e:	2b 01       	movw	r4, r22
     610:	3c 01       	movw	r6, r24
     612:	2f a9       	ldd	r18, Y+55	; 0x37
     614:	38 ad       	ldd	r19, Y+56	; 0x38
     616:	49 ad       	ldd	r20, Y+57	; 0x39
     618:	5a ad       	ldd	r21, Y+58	; 0x3a
     61a:	ca 01       	movw	r24, r20
     61c:	b9 01       	movw	r22, r18
     61e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     622:	69 83       	std	Y+1, r22	; 0x01
     624:	7a 83       	std	Y+2, r23	; 0x02
     626:	8b 83       	std	Y+3, r24	; 0x03
     628:	9c 83       	std	Y+4, r25	; 0x04
     62a:	9b 01       	movw	r18, r22
     62c:	ac 01       	movw	r20, r24
     62e:	c3 01       	movw	r24, r6
     630:	b2 01       	movw	r22, r4
     632:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     636:	6d 8f       	std	Y+29, r22	; 0x1d
     638:	7e 8f       	std	Y+30, r23	; 0x1e
     63a:	8f 8f       	std	Y+31, r24	; 0x1f
     63c:	98 a3       	std	Y+32, r25	; 0x20
     63e:	2b ad       	ldd	r18, Y+59	; 0x3b
     640:	3c ad       	ldd	r19, Y+60	; 0x3c
     642:	4d ad       	ldd	r20, Y+61	; 0x3d
     644:	5e ad       	ldd	r21, Y+62	; 0x3e
     646:	ca 01       	movw	r24, r20
     648:	b9 01       	movw	r22, r18
     64a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     64e:	69 8f       	std	Y+25, r22	; 0x19
     650:	7a 8f       	std	Y+26, r23	; 0x1a
     652:	8b 8f       	std	Y+27, r24	; 0x1b
     654:	9c 8f       	std	Y+28, r25	; 0x1c
     656:	29 81       	ldd	r18, Y+1	; 0x01
     658:	3a 81       	ldd	r19, Y+2	; 0x02
     65a:	4b 81       	ldd	r20, Y+3	; 0x03
     65c:	5c 81       	ldd	r21, Y+4	; 0x04
     65e:	c3 01       	movw	r24, r6
     660:	b2 01       	movw	r22, r4
     662:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     666:	2b 01       	movw	r4, r22
     668:	3c 01       	movw	r6, r24
     66a:	29 8d       	ldd	r18, Y+25	; 0x19
     66c:	3a 8d       	ldd	r19, Y+26	; 0x1a
     66e:	4b 8d       	ldd	r20, Y+27	; 0x1b
     670:	5c 8d       	ldd	r21, Y+28	; 0x1c
     672:	c3 01       	movw	r24, r6
     674:	b2 01       	movw	r22, r4
     676:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     67a:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <sqrt>
     67e:	2b 01       	movw	r4, r22
     680:	3c 01       	movw	r6, r24
		ax /= norm;
     682:	9b 01       	movw	r18, r22
     684:	ac 01       	movw	r20, r24
     686:	c6 01       	movw	r24, r12
     688:	b5 01       	movw	r22, r10
     68a:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
		ay /= norm;
     696:	a3 01       	movw	r20, r6
     698:	92 01       	movw	r18, r4
     69a:	6f a9       	ldd	r22, Y+55	; 0x37
     69c:	78 ad       	ldd	r23, Y+56	; 0x38
     69e:	89 ad       	ldd	r24, Y+57	; 0x39
     6a0:	9a ad       	ldd	r25, Y+58	; 0x3a
     6a2:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
     6a6:	6d 83       	std	Y+5, r22	; 0x05
     6a8:	7e 83       	std	Y+6, r23	; 0x06
     6aa:	8f 83       	std	Y+7, r24	; 0x07
     6ac:	98 87       	std	Y+8, r25	; 0x08
		az /= norm;
     6ae:	a3 01       	movw	r20, r6
     6b0:	92 01       	movw	r18, r4
     6b2:	6b ad       	ldd	r22, Y+59	; 0x3b
     6b4:	7c ad       	ldd	r23, Y+60	; 0x3c
     6b6:	8d ad       	ldd	r24, Y+61	; 0x3d
     6b8:	9e ad       	ldd	r25, Y+62	; 0x3e
     6ba:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
     6be:	69 87       	std	Y+9, r22	; 0x09
     6c0:	7a 87       	std	Y+10, r23	; 0x0a
     6c2:	8b 87       	std	Y+11, r24	; 0x0b
     6c4:	9c 87       	std	Y+12, r25	; 0x0c

		// Estimated direction of gravity and vector perpendicular to magnetic flux
		halfvx = q1 * q3 - q0 * q2;
     6c6:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <q1>
     6ca:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <q1+0x1>
     6ce:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <q1+0x2>
     6d2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <q1+0x3>
     6d6:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <q3>
     6da:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <q3+0x1>
     6de:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <q3+0x2>
     6e2:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <q3+0x3>
     6e6:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
     6ea:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
     6ee:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
     6f2:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
     6f6:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q2>
     6fa:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q2+0x1>
     6fe:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q2+0x2>
     702:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q2+0x3>
     706:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     70a:	6b 01       	movw	r12, r22
     70c:	7c 01       	movw	r14, r24
     70e:	a3 01       	movw	r20, r6
     710:	92 01       	movw	r18, r4
     712:	c5 01       	movw	r24, r10
     714:	b4 01       	movw	r22, r8
     716:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     71a:	9b 01       	movw	r18, r22
     71c:	ac 01       	movw	r20, r24
     71e:	c7 01       	movw	r24, r14
     720:	b6 01       	movw	r22, r12
     722:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     726:	69 8f       	std	Y+25, r22	; 0x19
     728:	7a 8f       	std	Y+26, r23	; 0x1a
     72a:	8b 8f       	std	Y+27, r24	; 0x1b
     72c:	9c 8f       	std	Y+28, r25	; 0x1c
		halfvy = q0 * q1 + q2 * q3;
     72e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     732:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     736:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     73a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     73e:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <q1>
     742:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <q1+0x1>
     746:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <q1+0x2>
     74a:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <q1+0x3>
     74e:	80 90 14 01 	lds	r8, 0x0114	; 0x800114 <q2>
     752:	90 90 15 01 	lds	r9, 0x0115	; 0x800115 <q2+0x1>
     756:	a0 90 16 01 	lds	r10, 0x0116	; 0x800116 <q2+0x2>
     75a:	b0 90 17 01 	lds	r11, 0x0117	; 0x800117 <q2+0x3>
     75e:	40 90 10 01 	lds	r4, 0x0110	; 0x800110 <q3>
     762:	50 90 11 01 	lds	r5, 0x0111	; 0x800111 <q3+0x1>
     766:	60 90 12 01 	lds	r6, 0x0112	; 0x800112 <q3+0x2>
     76a:	70 90 13 01 	lds	r7, 0x0113	; 0x800113 <q3+0x3>
     76e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     772:	6b 01       	movw	r12, r22
     774:	7c 01       	movw	r14, r24
     776:	a3 01       	movw	r20, r6
     778:	92 01       	movw	r18, r4
     77a:	c5 01       	movw	r24, r10
     77c:	b4 01       	movw	r22, r8
     77e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     782:	9b 01       	movw	r18, r22
     784:	ac 01       	movw	r20, r24
     786:	c7 01       	movw	r24, r14
     788:	b6 01       	movw	r22, r12
     78a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     78e:	6d 8f       	std	Y+29, r22	; 0x1d
     790:	7e 8f       	std	Y+30, r23	; 0x1e
     792:	8f 8f       	std	Y+31, r24	; 0x1f
     794:	98 a3       	std	Y+32, r25	; 0x20
		halfvz = q0 * q0 - 0.5f + q3 * q3;
     796:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     79a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     79e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     7a2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     7a6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     7aa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     7ae:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__data_start+0x2>
     7b2:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__data_start+0x3>
     7b6:	80 90 10 01 	lds	r8, 0x0110	; 0x800110 <q3>
     7ba:	90 90 11 01 	lds	r9, 0x0111	; 0x800111 <q3+0x1>
     7be:	a0 90 12 01 	lds	r10, 0x0112	; 0x800112 <q3+0x2>
     7c2:	b0 90 13 01 	lds	r11, 0x0113	; 0x800113 <q3+0x3>
     7c6:	40 90 10 01 	lds	r4, 0x0110	; 0x800110 <q3>
     7ca:	50 90 11 01 	lds	r5, 0x0111	; 0x800111 <q3+0x1>
     7ce:	60 90 12 01 	lds	r6, 0x0112	; 0x800112 <q3+0x2>
     7d2:	70 90 13 01 	lds	r7, 0x0113	; 0x800113 <q3+0x3>
     7d6:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     7da:	20 e0       	ldi	r18, 0x00	; 0
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	40 e0       	ldi	r20, 0x00	; 0
     7e0:	5f e3       	ldi	r21, 0x3F	; 63
     7e2:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     7e6:	6b 01       	movw	r12, r22
     7e8:	7c 01       	movw	r14, r24
     7ea:	a3 01       	movw	r20, r6
     7ec:	92 01       	movw	r18, r4
     7ee:	c5 01       	movw	r24, r10
     7f0:	b4 01       	movw	r22, r8
     7f2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     7f6:	9b 01       	movw	r18, r22
     7f8:	ac 01       	movw	r20, r24
     7fa:	c7 01       	movw	r24, r14
     7fc:	b6 01       	movw	r22, r12
     7fe:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     802:	6b 01       	movw	r12, r22
     804:	7c 01       	movw	r14, r24

		// Error is sum of cross product between estimated and measured direction of gravity
		halfex = (ay * halfvz - az * halfvy);
     806:	9b 01       	movw	r18, r22
     808:	ac 01       	movw	r20, r24
     80a:	6d 81       	ldd	r22, Y+5	; 0x05
     80c:	7e 81       	ldd	r23, Y+6	; 0x06
     80e:	8f 81       	ldd	r24, Y+7	; 0x07
     810:	98 85       	ldd	r25, Y+8	; 0x08
     812:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     816:	4b 01       	movw	r8, r22
     818:	5c 01       	movw	r10, r24
     81a:	2d 8d       	ldd	r18, Y+29	; 0x1d
     81c:	3e 8d       	ldd	r19, Y+30	; 0x1e
     81e:	4f 8d       	ldd	r20, Y+31	; 0x1f
     820:	58 a1       	ldd	r21, Y+32	; 0x20
     822:	69 85       	ldd	r22, Y+9	; 0x09
     824:	7a 85       	ldd	r23, Y+10	; 0x0a
     826:	8b 85       	ldd	r24, Y+11	; 0x0b
     828:	9c 85       	ldd	r25, Y+12	; 0x0c
     82a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     82e:	9b 01       	movw	r18, r22
     830:	ac 01       	movw	r20, r24
     832:	c5 01       	movw	r24, r10
     834:	b4 01       	movw	r22, r8
     836:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     83a:	69 a3       	std	Y+33, r22	; 0x21
     83c:	7a a3       	std	Y+34, r23	; 0x22
     83e:	8b a3       	std	Y+35, r24	; 0x23
     840:	9c a3       	std	Y+36, r25	; 0x24
		halfey = (az * halfvx - ax * halfvz);
     842:	29 8d       	ldd	r18, Y+25	; 0x19
     844:	3a 8d       	ldd	r19, Y+26	; 0x1a
     846:	4b 8d       	ldd	r20, Y+27	; 0x1b
     848:	5c 8d       	ldd	r21, Y+28	; 0x1c
     84a:	69 85       	ldd	r22, Y+9	; 0x09
     84c:	7a 85       	ldd	r23, Y+10	; 0x0a
     84e:	8b 85       	ldd	r24, Y+11	; 0x0b
     850:	9c 85       	ldd	r25, Y+12	; 0x0c
     852:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     856:	4b 01       	movw	r8, r22
     858:	5c 01       	movw	r10, r24
     85a:	a7 01       	movw	r20, r14
     85c:	96 01       	movw	r18, r12
     85e:	69 81       	ldd	r22, Y+1	; 0x01
     860:	7a 81       	ldd	r23, Y+2	; 0x02
     862:	8b 81       	ldd	r24, Y+3	; 0x03
     864:	9c 81       	ldd	r25, Y+4	; 0x04
     866:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     86a:	9b 01       	movw	r18, r22
     86c:	ac 01       	movw	r20, r24
     86e:	c5 01       	movw	r24, r10
     870:	b4 01       	movw	r22, r8
     872:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     876:	2b 01       	movw	r4, r22
     878:	3c 01       	movw	r6, r24
		halfez = (ax * halfvy - ay * halfvx);
     87a:	2d 8d       	ldd	r18, Y+29	; 0x1d
     87c:	3e 8d       	ldd	r19, Y+30	; 0x1e
     87e:	4f 8d       	ldd	r20, Y+31	; 0x1f
     880:	58 a1       	ldd	r21, Y+32	; 0x20
     882:	69 81       	ldd	r22, Y+1	; 0x01
     884:	7a 81       	ldd	r23, Y+2	; 0x02
     886:	8b 81       	ldd	r24, Y+3	; 0x03
     888:	9c 81       	ldd	r25, Y+4	; 0x04
     88a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     88e:	6b 01       	movw	r12, r22
     890:	7c 01       	movw	r14, r24
     892:	29 8d       	ldd	r18, Y+25	; 0x19
     894:	3a 8d       	ldd	r19, Y+26	; 0x1a
     896:	4b 8d       	ldd	r20, Y+27	; 0x1b
     898:	5c 8d       	ldd	r21, Y+28	; 0x1c
     89a:	6d 81       	ldd	r22, Y+5	; 0x05
     89c:	7e 81       	ldd	r23, Y+6	; 0x06
     89e:	8f 81       	ldd	r24, Y+7	; 0x07
     8a0:	98 85       	ldd	r25, Y+8	; 0x08
     8a2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     8a6:	9b 01       	movw	r18, r22
     8a8:	ac 01       	movw	r20, r24
     8aa:	c7 01       	movw	r24, r14
     8ac:	b6 01       	movw	r22, r12
     8ae:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     8b2:	4b 01       	movw	r8, r22
     8b4:	5c 01       	movw	r10, r24

		// Compute and apply integral feedback if enabled
		if(mpu6050_mahonytwoKiDef > 0.0f) {
			integralFBx += mpu6050_mahonytwoKiDef * halfex * (1.0f / mpu6050_mahonysampleFreq);	// integral error scaled by Ki
     8b6:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <integralFBx>
     8ba:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <integralFBx+0x1>
     8be:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <integralFBx+0x2>
     8c2:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <integralFBx+0x3>
     8c6:	2d ec       	ldi	r18, 0xCD	; 205
     8c8:	3c ec       	ldi	r19, 0xCC	; 204
     8ca:	4c e4       	ldi	r20, 0x4C	; 76
     8cc:	5e e3       	ldi	r21, 0x3E	; 62
     8ce:	69 a1       	ldd	r22, Y+33	; 0x21
     8d0:	7a a1       	ldd	r23, Y+34	; 0x22
     8d2:	8b a1       	ldd	r24, Y+35	; 0x23
     8d4:	9c a1       	ldd	r25, Y+36	; 0x24
     8d6:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     8da:	2a e8       	ldi	r18, 0x8A	; 138
     8dc:	3b e4       	ldi	r19, 0x4B	; 75
     8de:	46 e8       	ldi	r20, 0x86	; 134
     8e0:	5c e3       	ldi	r21, 0x3C	; 60
     8e2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     8e6:	a7 01       	movw	r20, r14
     8e8:	96 01       	movw	r18, r12
     8ea:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     8ee:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <integralFBx>
     8f2:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <integralFBx+0x1>
     8f6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <integralFBx+0x2>
     8fa:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <integralFBx+0x3>
			integralFBy += mpu6050_mahonytwoKiDef * halfey * (1.0f / mpu6050_mahonysampleFreq);
     8fe:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <integralFBy>
     902:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <integralFBy+0x1>
     906:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <integralFBy+0x2>
     90a:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <integralFBy+0x3>
     90e:	2d ec       	ldi	r18, 0xCD	; 205
     910:	3c ec       	ldi	r19, 0xCC	; 204
     912:	4c e4       	ldi	r20, 0x4C	; 76
     914:	5e e3       	ldi	r21, 0x3E	; 62
     916:	c3 01       	movw	r24, r6
     918:	b2 01       	movw	r22, r4
     91a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     91e:	2a e8       	ldi	r18, 0x8A	; 138
     920:	3b e4       	ldi	r19, 0x4B	; 75
     922:	46 e8       	ldi	r20, 0x86	; 134
     924:	5c e3       	ldi	r21, 0x3C	; 60
     926:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     92a:	a7 01       	movw	r20, r14
     92c:	96 01       	movw	r18, r12
     92e:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     932:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <integralFBy>
     936:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <integralFBy+0x1>
     93a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <integralFBy+0x2>
     93e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <integralFBy+0x3>
			integralFBz += mpu6050_mahonytwoKiDef * halfez * (1.0f / mpu6050_mahonysampleFreq);
     942:	c0 90 04 01 	lds	r12, 0x0104	; 0x800104 <__data_end>
     946:	d0 90 05 01 	lds	r13, 0x0105	; 0x800105 <__data_end+0x1>
     94a:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <__data_end+0x2>
     94e:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <__data_end+0x3>
     952:	2d ec       	ldi	r18, 0xCD	; 205
     954:	3c ec       	ldi	r19, 0xCC	; 204
     956:	4c e4       	ldi	r20, 0x4C	; 76
     958:	5e e3       	ldi	r21, 0x3E	; 62
     95a:	c5 01       	movw	r24, r10
     95c:	b4 01       	movw	r22, r8
     95e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     962:	2a e8       	ldi	r18, 0x8A	; 138
     964:	3b e4       	ldi	r19, 0x4B	; 75
     966:	46 e8       	ldi	r20, 0x86	; 134
     968:	5c e3       	ldi	r21, 0x3C	; 60
     96a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     96e:	a7 01       	movw	r20, r14
     970:	96 01       	movw	r18, r12
     972:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     976:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
     97a:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
     97e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
     982:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
			gx += integralFBx;	// apply integral feedback
     986:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <integralFBx>
     98a:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <integralFBx+0x1>
     98e:	40 91 0e 01 	lds	r20, 0x010E	; 0x80010e <integralFBx+0x2>
     992:	50 91 0f 01 	lds	r21, 0x010F	; 0x80010f <integralFBx+0x3>
     996:	6d 85       	ldd	r22, Y+13	; 0x0d
     998:	7e 85       	ldd	r23, Y+14	; 0x0e
     99a:	8f 85       	ldd	r24, Y+15	; 0x0f
     99c:	98 89       	ldd	r25, Y+16	; 0x10
     99e:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     9a2:	6d 83       	std	Y+5, r22	; 0x05
     9a4:	7e 83       	std	Y+6, r23	; 0x06
     9a6:	8f 83       	std	Y+7, r24	; 0x07
     9a8:	98 87       	std	Y+8, r25	; 0x08
			gy += integralFBy;
     9aa:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <integralFBy>
     9ae:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <integralFBy+0x1>
     9b2:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <integralFBy+0x2>
     9b6:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <integralFBy+0x3>
     9ba:	69 89       	ldd	r22, Y+17	; 0x11
     9bc:	7a 89       	ldd	r23, Y+18	; 0x12
     9be:	8b 89       	ldd	r24, Y+19	; 0x13
     9c0:	9c 89       	ldd	r25, Y+20	; 0x14
     9c2:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     9c6:	6b 01       	movw	r12, r22
     9c8:	7c 01       	movw	r14, r24
			gz += integralFBz;
     9ca:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_end>
     9ce:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_end+0x1>
     9d2:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <__data_end+0x2>
     9d6:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <__data_end+0x3>
     9da:	6d 89       	ldd	r22, Y+21	; 0x15
     9dc:	7e 89       	ldd	r23, Y+22	; 0x16
     9de:	8f 89       	ldd	r24, Y+23	; 0x17
     9e0:	98 8d       	ldd	r25, Y+24	; 0x18
     9e2:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     9e6:	69 87       	std	Y+9, r22	; 0x09
     9e8:	7a 87       	std	Y+10, r23	; 0x0a
     9ea:	8b 87       	std	Y+11, r24	; 0x0b
     9ec:	9c 87       	std	Y+12, r25	; 0x0c
			integralFBy = 0.0f;
			integralFBz = 0.0f;
		}

		// Apply proportional feedback
		gx += mpu6050_mahonytwoKpDef * halfex;
     9ee:	2d 81       	ldd	r18, Y+5	; 0x05
     9f0:	3e 81       	ldd	r19, Y+6	; 0x06
     9f2:	4f 81       	ldd	r20, Y+7	; 0x07
     9f4:	58 85       	ldd	r21, Y+8	; 0x08
     9f6:	69 a1       	ldd	r22, Y+33	; 0x21
     9f8:	7a a1       	ldd	r23, Y+34	; 0x22
     9fa:	8b a1       	ldd	r24, Y+35	; 0x23
     9fc:	9c a1       	ldd	r25, Y+36	; 0x24
     9fe:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     a02:	6d 87       	std	Y+13, r22	; 0x0d
     a04:	7e 87       	std	Y+14, r23	; 0x0e
     a06:	8f 87       	std	Y+15, r24	; 0x0f
     a08:	98 8b       	std	Y+16, r25	; 0x10
		gy += mpu6050_mahonytwoKpDef * halfey;
     a0a:	a7 01       	movw	r20, r14
     a0c:	96 01       	movw	r18, r12
     a0e:	c3 01       	movw	r24, r6
     a10:	b2 01       	movw	r22, r4
     a12:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     a16:	69 8b       	std	Y+17, r22	; 0x11
     a18:	7a 8b       	std	Y+18, r23	; 0x12
     a1a:	8b 8b       	std	Y+19, r24	; 0x13
     a1c:	9c 8b       	std	Y+20, r25	; 0x14
		gz += mpu6050_mahonytwoKpDef * halfez;
     a1e:	29 85       	ldd	r18, Y+9	; 0x09
     a20:	3a 85       	ldd	r19, Y+10	; 0x0a
     a22:	4b 85       	ldd	r20, Y+11	; 0x0b
     a24:	5c 85       	ldd	r21, Y+12	; 0x0c
     a26:	c5 01       	movw	r24, r10
     a28:	b4 01       	movw	r22, r8
     a2a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     a2e:	6d 8b       	std	Y+21, r22	; 0x15
     a30:	7e 8b       	std	Y+22, r23	; 0x16
     a32:	8f 8b       	std	Y+23, r24	; 0x17
     a34:	98 8f       	std	Y+24, r25	; 0x18
	}

	// Integrate rate of change of quaternion
	gx *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));		// pre-multiply common factors
     a36:	2a e8       	ldi	r18, 0x8A	; 138
     a38:	3b e4       	ldi	r19, 0x4B	; 75
     a3a:	46 e0       	ldi	r20, 0x06	; 6
     a3c:	5c e3       	ldi	r21, 0x3C	; 60
     a3e:	6d 85       	ldd	r22, Y+13	; 0x0d
     a40:	7e 85       	ldd	r23, Y+14	; 0x0e
     a42:	8f 85       	ldd	r24, Y+15	; 0x0f
     a44:	98 89       	ldd	r25, Y+16	; 0x10
     a46:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     a4a:	6d 83       	std	Y+5, r22	; 0x05
     a4c:	7e 83       	std	Y+6, r23	; 0x06
     a4e:	8f 83       	std	Y+7, r24	; 0x07
     a50:	98 87       	std	Y+8, r25	; 0x08
	gy *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));
     a52:	2a e8       	ldi	r18, 0x8A	; 138
     a54:	3b e4       	ldi	r19, 0x4B	; 75
     a56:	46 e0       	ldi	r20, 0x06	; 6
     a58:	5c e3       	ldi	r21, 0x3C	; 60
     a5a:	69 89       	ldd	r22, Y+17	; 0x11
     a5c:	7a 89       	ldd	r23, Y+18	; 0x12
     a5e:	8b 89       	ldd	r24, Y+19	; 0x13
     a60:	9c 89       	ldd	r25, Y+20	; 0x14
     a62:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     a66:	69 87       	std	Y+9, r22	; 0x09
     a68:	7a 87       	std	Y+10, r23	; 0x0a
     a6a:	8b 87       	std	Y+11, r24	; 0x0b
     a6c:	9c 87       	std	Y+12, r25	; 0x0c
	gz *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));
     a6e:	2a e8       	ldi	r18, 0x8A	; 138
     a70:	3b e4       	ldi	r19, 0x4B	; 75
     a72:	46 e0       	ldi	r20, 0x06	; 6
     a74:	5c e3       	ldi	r21, 0x3C	; 60
     a76:	6d 89       	ldd	r22, Y+21	; 0x15
     a78:	7e 89       	ldd	r23, Y+22	; 0x16
     a7a:	8f 89       	ldd	r24, Y+23	; 0x17
     a7c:	98 8d       	ldd	r25, Y+24	; 0x18
     a7e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     a82:	6d 87       	std	Y+13, r22	; 0x0d
     a84:	7e 87       	std	Y+14, r23	; 0x0e
     a86:	8f 87       	std	Y+15, r24	; 0x0f
     a88:	98 8b       	std	Y+16, r25	; 0x10
	qa = q0;
     a8a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a8e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     a92:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
     a96:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
     a9a:	89 8b       	std	Y+17, r24	; 0x11
     a9c:	9a 8b       	std	Y+18, r25	; 0x12
     a9e:	ab 8b       	std	Y+19, r26	; 0x13
     aa0:	bc 8b       	std	Y+20, r27	; 0x14
	qb = q1;
     aa2:	80 90 18 01 	lds	r8, 0x0118	; 0x800118 <q1>
     aa6:	90 90 19 01 	lds	r9, 0x0119	; 0x800119 <q1+0x1>
     aaa:	a0 90 1a 01 	lds	r10, 0x011A	; 0x80011a <q1+0x2>
     aae:	b0 90 1b 01 	lds	r11, 0x011B	; 0x80011b <q1+0x3>
	qc = q2;
     ab2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <q2>
     ab6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <q2+0x1>
     aba:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <q2+0x2>
     abe:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <q2+0x3>
     ac2:	8d 8b       	std	Y+21, r24	; 0x15
     ac4:	9e 8b       	std	Y+22, r25	; 0x16
     ac6:	af 8b       	std	Y+23, r26	; 0x17
     ac8:	b8 8f       	std	Y+24, r27	; 0x18
	q0 += (-qb * gx - qc * gy - q3 * gz);
     aca:	40 90 10 01 	lds	r4, 0x0110	; 0x800110 <q3>
     ace:	50 90 11 01 	lds	r5, 0x0111	; 0x800111 <q3+0x1>
     ad2:	60 90 12 01 	lds	r6, 0x0112	; 0x800112 <q3+0x2>
     ad6:	70 90 13 01 	lds	r7, 0x0113	; 0x800113 <q3+0x3>
     ada:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     ade:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     ae2:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     ae6:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     aea:	c5 01       	movw	r24, r10
     aec:	b4 01       	movw	r22, r8
     aee:	90 58       	subi	r25, 0x80	; 128
     af0:	2d 81       	ldd	r18, Y+5	; 0x05
     af2:	3e 81       	ldd	r19, Y+6	; 0x06
     af4:	4f 81       	ldd	r20, Y+7	; 0x07
     af6:	58 85       	ldd	r21, Y+8	; 0x08
     af8:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     afc:	69 83       	std	Y+1, r22	; 0x01
     afe:	7a 83       	std	Y+2, r23	; 0x02
     b00:	8b 83       	std	Y+3, r24	; 0x03
     b02:	9c 83       	std	Y+4, r25	; 0x04
     b04:	2d 89       	ldd	r18, Y+21	; 0x15
     b06:	3e 89       	ldd	r19, Y+22	; 0x16
     b08:	4f 89       	ldd	r20, Y+23	; 0x17
     b0a:	58 8d       	ldd	r21, Y+24	; 0x18
     b0c:	69 85       	ldd	r22, Y+9	; 0x09
     b0e:	7a 85       	ldd	r23, Y+10	; 0x0a
     b10:	8b 85       	ldd	r24, Y+11	; 0x0b
     b12:	9c 85       	ldd	r25, Y+12	; 0x0c
     b14:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     b18:	9b 01       	movw	r18, r22
     b1a:	ac 01       	movw	r20, r24
     b1c:	69 81       	ldd	r22, Y+1	; 0x01
     b1e:	7a 81       	ldd	r23, Y+2	; 0x02
     b20:	8b 81       	ldd	r24, Y+3	; 0x03
     b22:	9c 81       	ldd	r25, Y+4	; 0x04
     b24:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     b28:	69 83       	std	Y+1, r22	; 0x01
     b2a:	7a 83       	std	Y+2, r23	; 0x02
     b2c:	8b 83       	std	Y+3, r24	; 0x03
     b2e:	9c 83       	std	Y+4, r25	; 0x04
     b30:	a3 01       	movw	r20, r6
     b32:	92 01       	movw	r18, r4
     b34:	6d 85       	ldd	r22, Y+13	; 0x0d
     b36:	7e 85       	ldd	r23, Y+14	; 0x0e
     b38:	8f 85       	ldd	r24, Y+15	; 0x0f
     b3a:	98 89       	ldd	r25, Y+16	; 0x10
     b3c:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     b40:	9b 01       	movw	r18, r22
     b42:	ac 01       	movw	r20, r24
     b44:	69 81       	ldd	r22, Y+1	; 0x01
     b46:	7a 81       	ldd	r23, Y+2	; 0x02
     b48:	8b 81       	ldd	r24, Y+3	; 0x03
     b4a:	9c 81       	ldd	r25, Y+4	; 0x04
     b4c:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     b50:	a7 01       	movw	r20, r14
     b52:	96 01       	movw	r18, r12
     b54:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     b58:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
     b5c:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     b60:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
     b64:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	q1 += (qa * gx + qc * gz - q3 * gy);
     b68:	40 90 10 01 	lds	r4, 0x0110	; 0x800110 <q3>
     b6c:	50 90 11 01 	lds	r5, 0x0111	; 0x800111 <q3+0x1>
     b70:	60 90 12 01 	lds	r6, 0x0112	; 0x800112 <q3+0x2>
     b74:	70 90 13 01 	lds	r7, 0x0113	; 0x800113 <q3+0x3>
     b78:	c0 90 18 01 	lds	r12, 0x0118	; 0x800118 <q1>
     b7c:	d0 90 19 01 	lds	r13, 0x0119	; 0x800119 <q1+0x1>
     b80:	e0 90 1a 01 	lds	r14, 0x011A	; 0x80011a <q1+0x2>
     b84:	f0 90 1b 01 	lds	r15, 0x011B	; 0x80011b <q1+0x3>
     b88:	29 89       	ldd	r18, Y+17	; 0x11
     b8a:	3a 89       	ldd	r19, Y+18	; 0x12
     b8c:	4b 89       	ldd	r20, Y+19	; 0x13
     b8e:	5c 89       	ldd	r21, Y+20	; 0x14
     b90:	6d 81       	ldd	r22, Y+5	; 0x05
     b92:	7e 81       	ldd	r23, Y+6	; 0x06
     b94:	8f 81       	ldd	r24, Y+7	; 0x07
     b96:	98 85       	ldd	r25, Y+8	; 0x08
     b98:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     b9c:	69 83       	std	Y+1, r22	; 0x01
     b9e:	7a 83       	std	Y+2, r23	; 0x02
     ba0:	8b 83       	std	Y+3, r24	; 0x03
     ba2:	9c 83       	std	Y+4, r25	; 0x04
     ba4:	2d 89       	ldd	r18, Y+21	; 0x15
     ba6:	3e 89       	ldd	r19, Y+22	; 0x16
     ba8:	4f 89       	ldd	r20, Y+23	; 0x17
     baa:	58 8d       	ldd	r21, Y+24	; 0x18
     bac:	6d 85       	ldd	r22, Y+13	; 0x0d
     bae:	7e 85       	ldd	r23, Y+14	; 0x0e
     bb0:	8f 85       	ldd	r24, Y+15	; 0x0f
     bb2:	98 89       	ldd	r25, Y+16	; 0x10
     bb4:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     bb8:	9b 01       	movw	r18, r22
     bba:	ac 01       	movw	r20, r24
     bbc:	69 81       	ldd	r22, Y+1	; 0x01
     bbe:	7a 81       	ldd	r23, Y+2	; 0x02
     bc0:	8b 81       	ldd	r24, Y+3	; 0x03
     bc2:	9c 81       	ldd	r25, Y+4	; 0x04
     bc4:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     bc8:	69 83       	std	Y+1, r22	; 0x01
     bca:	7a 83       	std	Y+2, r23	; 0x02
     bcc:	8b 83       	std	Y+3, r24	; 0x03
     bce:	9c 83       	std	Y+4, r25	; 0x04
     bd0:	a3 01       	movw	r20, r6
     bd2:	92 01       	movw	r18, r4
     bd4:	69 85       	ldd	r22, Y+9	; 0x09
     bd6:	7a 85       	ldd	r23, Y+10	; 0x0a
     bd8:	8b 85       	ldd	r24, Y+11	; 0x0b
     bda:	9c 85       	ldd	r25, Y+12	; 0x0c
     bdc:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     be0:	9b 01       	movw	r18, r22
     be2:	ac 01       	movw	r20, r24
     be4:	69 81       	ldd	r22, Y+1	; 0x01
     be6:	7a 81       	ldd	r23, Y+2	; 0x02
     be8:	8b 81       	ldd	r24, Y+3	; 0x03
     bea:	9c 81       	ldd	r25, Y+4	; 0x04
     bec:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     bf0:	a7 01       	movw	r20, r14
     bf2:	96 01       	movw	r18, r12
     bf4:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     bf8:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <q1>
     bfc:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <q1+0x1>
     c00:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <q1+0x2>
     c04:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <q1+0x3>
	q2 += (qa * gy - qb * gz + q3 * gx);
     c08:	40 90 10 01 	lds	r4, 0x0110	; 0x800110 <q3>
     c0c:	50 90 11 01 	lds	r5, 0x0111	; 0x800111 <q3+0x1>
     c10:	60 90 12 01 	lds	r6, 0x0112	; 0x800112 <q3+0x2>
     c14:	70 90 13 01 	lds	r7, 0x0113	; 0x800113 <q3+0x3>
     c18:	c0 90 14 01 	lds	r12, 0x0114	; 0x800114 <q2>
     c1c:	d0 90 15 01 	lds	r13, 0x0115	; 0x800115 <q2+0x1>
     c20:	e0 90 16 01 	lds	r14, 0x0116	; 0x800116 <q2+0x2>
     c24:	f0 90 17 01 	lds	r15, 0x0117	; 0x800117 <q2+0x3>
     c28:	29 89       	ldd	r18, Y+17	; 0x11
     c2a:	3a 89       	ldd	r19, Y+18	; 0x12
     c2c:	4b 89       	ldd	r20, Y+19	; 0x13
     c2e:	5c 89       	ldd	r21, Y+20	; 0x14
     c30:	69 85       	ldd	r22, Y+9	; 0x09
     c32:	7a 85       	ldd	r23, Y+10	; 0x0a
     c34:	8b 85       	ldd	r24, Y+11	; 0x0b
     c36:	9c 85       	ldd	r25, Y+12	; 0x0c
     c38:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     c3c:	69 83       	std	Y+1, r22	; 0x01
     c3e:	7a 83       	std	Y+2, r23	; 0x02
     c40:	8b 83       	std	Y+3, r24	; 0x03
     c42:	9c 83       	std	Y+4, r25	; 0x04
     c44:	a5 01       	movw	r20, r10
     c46:	94 01       	movw	r18, r8
     c48:	6d 85       	ldd	r22, Y+13	; 0x0d
     c4a:	7e 85       	ldd	r23, Y+14	; 0x0e
     c4c:	8f 85       	ldd	r24, Y+15	; 0x0f
     c4e:	98 89       	ldd	r25, Y+16	; 0x10
     c50:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     c54:	9b 01       	movw	r18, r22
     c56:	ac 01       	movw	r20, r24
     c58:	69 81       	ldd	r22, Y+1	; 0x01
     c5a:	7a 81       	ldd	r23, Y+2	; 0x02
     c5c:	8b 81       	ldd	r24, Y+3	; 0x03
     c5e:	9c 81       	ldd	r25, Y+4	; 0x04
     c60:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     c64:	69 83       	std	Y+1, r22	; 0x01
     c66:	7a 83       	std	Y+2, r23	; 0x02
     c68:	8b 83       	std	Y+3, r24	; 0x03
     c6a:	9c 83       	std	Y+4, r25	; 0x04
     c6c:	a3 01       	movw	r20, r6
     c6e:	92 01       	movw	r18, r4
     c70:	6d 81       	ldd	r22, Y+5	; 0x05
     c72:	7e 81       	ldd	r23, Y+6	; 0x06
     c74:	8f 81       	ldd	r24, Y+7	; 0x07
     c76:	98 85       	ldd	r25, Y+8	; 0x08
     c78:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     c7c:	9b 01       	movw	r18, r22
     c7e:	ac 01       	movw	r20, r24
     c80:	69 81       	ldd	r22, Y+1	; 0x01
     c82:	7a 81       	ldd	r23, Y+2	; 0x02
     c84:	8b 81       	ldd	r24, Y+3	; 0x03
     c86:	9c 81       	ldd	r25, Y+4	; 0x04
     c88:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     c8c:	a7 01       	movw	r20, r14
     c8e:	96 01       	movw	r18, r12
     c90:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     c94:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <q2>
     c98:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <q2+0x1>
     c9c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <q2+0x2>
     ca0:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <q2+0x3>
	q3 += (qa * gz + qb * gy - qc * gx);
     ca4:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <q3>
     ca8:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <q3+0x1>
     cac:	e0 90 12 01 	lds	r14, 0x0112	; 0x800112 <q3+0x2>
     cb0:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <q3+0x3>
     cb4:	29 89       	ldd	r18, Y+17	; 0x11
     cb6:	3a 89       	ldd	r19, Y+18	; 0x12
     cb8:	4b 89       	ldd	r20, Y+19	; 0x13
     cba:	5c 89       	ldd	r21, Y+20	; 0x14
     cbc:	6d 85       	ldd	r22, Y+13	; 0x0d
     cbe:	7e 85       	ldd	r23, Y+14	; 0x0e
     cc0:	8f 85       	ldd	r24, Y+15	; 0x0f
     cc2:	98 89       	ldd	r25, Y+16	; 0x10
     cc4:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     cc8:	2b 01       	movw	r4, r22
     cca:	3c 01       	movw	r6, r24
     ccc:	a5 01       	movw	r20, r10
     cce:	94 01       	movw	r18, r8
     cd0:	69 85       	ldd	r22, Y+9	; 0x09
     cd2:	7a 85       	ldd	r23, Y+10	; 0x0a
     cd4:	8b 85       	ldd	r24, Y+11	; 0x0b
     cd6:	9c 85       	ldd	r25, Y+12	; 0x0c
     cd8:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     cdc:	9b 01       	movw	r18, r22
     cde:	ac 01       	movw	r20, r24
     ce0:	c3 01       	movw	r24, r6
     ce2:	b2 01       	movw	r22, r4
     ce4:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     ce8:	4b 01       	movw	r8, r22
     cea:	5c 01       	movw	r10, r24
     cec:	2d 89       	ldd	r18, Y+21	; 0x15
     cee:	3e 89       	ldd	r19, Y+22	; 0x16
     cf0:	4f 89       	ldd	r20, Y+23	; 0x17
     cf2:	58 8d       	ldd	r21, Y+24	; 0x18
     cf4:	6d 81       	ldd	r22, Y+5	; 0x05
     cf6:	7e 81       	ldd	r23, Y+6	; 0x06
     cf8:	8f 81       	ldd	r24, Y+7	; 0x07
     cfa:	98 85       	ldd	r25, Y+8	; 0x08
     cfc:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     d00:	9b 01       	movw	r18, r22
     d02:	ac 01       	movw	r20, r24
     d04:	c5 01       	movw	r24, r10
     d06:	b4 01       	movw	r22, r8
     d08:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
     d0c:	a7 01       	movw	r20, r14
     d0e:	96 01       	movw	r18, r12
     d10:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     d14:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <q3>
     d18:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <q3+0x1>
     d1c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <q3+0x2>
     d20:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <q3+0x3>

	// Normalise quaternion
	norm = sqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
     d24:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     d28:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     d2c:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     d30:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     d34:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
     d38:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
     d3c:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
     d40:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
     d44:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <q1>
     d48:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <q1+0x1>
     d4c:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <q1+0x2>
     d50:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <q1+0x3>
     d54:	8d 83       	std	Y+5, r24	; 0x05
     d56:	9e 83       	std	Y+6, r25	; 0x06
     d58:	af 83       	std	Y+7, r26	; 0x07
     d5a:	b8 87       	std	Y+8, r27	; 0x08
     d5c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <q1>
     d60:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <q1+0x1>
     d64:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <q1+0x2>
     d68:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <q1+0x3>
     d6c:	89 87       	std	Y+9, r24	; 0x09
     d6e:	9a 87       	std	Y+10, r25	; 0x0a
     d70:	ab 87       	std	Y+11, r26	; 0x0b
     d72:	bc 87       	std	Y+12, r27	; 0x0c
     d74:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <q2>
     d78:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <q2+0x1>
     d7c:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <q2+0x2>
     d80:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <q2+0x3>
     d84:	8d 87       	std	Y+13, r24	; 0x0d
     d86:	9e 87       	std	Y+14, r25	; 0x0e
     d88:	af 87       	std	Y+15, r26	; 0x0f
     d8a:	b8 8b       	std	Y+16, r27	; 0x10
     d8c:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <q2>
     d90:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <q2+0x1>
     d94:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <q2+0x2>
     d98:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <q2+0x3>
     d9c:	89 8b       	std	Y+17, r24	; 0x11
     d9e:	9a 8b       	std	Y+18, r25	; 0x12
     da0:	ab 8b       	std	Y+19, r26	; 0x13
     da2:	bc 8b       	std	Y+20, r27	; 0x14
     da4:	40 90 10 01 	lds	r4, 0x0110	; 0x800110 <q3>
     da8:	50 90 11 01 	lds	r5, 0x0111	; 0x800111 <q3+0x1>
     dac:	60 90 12 01 	lds	r6, 0x0112	; 0x800112 <q3+0x2>
     db0:	70 90 13 01 	lds	r7, 0x0113	; 0x800113 <q3+0x3>
     db4:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <q3>
     db8:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <q3+0x1>
     dbc:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <q3+0x2>
     dc0:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <q3+0x3>
     dc4:	8d 8b       	std	Y+21, r24	; 0x15
     dc6:	9e 8b       	std	Y+22, r25	; 0x16
     dc8:	af 8b       	std	Y+23, r26	; 0x17
     dca:	b8 8f       	std	Y+24, r27	; 0x18
     dcc:	a5 01       	movw	r20, r10
     dce:	94 01       	movw	r18, r8
     dd0:	c7 01       	movw	r24, r14
     dd2:	b6 01       	movw	r22, r12
     dd4:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     dd8:	69 83       	std	Y+1, r22	; 0x01
     dda:	7a 83       	std	Y+2, r23	; 0x02
     ddc:	8b 83       	std	Y+3, r24	; 0x03
     dde:	9c 83       	std	Y+4, r25	; 0x04
     de0:	29 85       	ldd	r18, Y+9	; 0x09
     de2:	3a 85       	ldd	r19, Y+10	; 0x0a
     de4:	4b 85       	ldd	r20, Y+11	; 0x0b
     de6:	5c 85       	ldd	r21, Y+12	; 0x0c
     de8:	6d 81       	ldd	r22, Y+5	; 0x05
     dea:	7e 81       	ldd	r23, Y+6	; 0x06
     dec:	8f 81       	ldd	r24, Y+7	; 0x07
     dee:	98 85       	ldd	r25, Y+8	; 0x08
     df0:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     df4:	9b 01       	movw	r18, r22
     df6:	ac 01       	movw	r20, r24
     df8:	69 81       	ldd	r22, Y+1	; 0x01
     dfa:	7a 81       	ldd	r23, Y+2	; 0x02
     dfc:	8b 81       	ldd	r24, Y+3	; 0x03
     dfe:	9c 81       	ldd	r25, Y+4	; 0x04
     e00:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     e04:	69 83       	std	Y+1, r22	; 0x01
     e06:	7a 83       	std	Y+2, r23	; 0x02
     e08:	8b 83       	std	Y+3, r24	; 0x03
     e0a:	9c 83       	std	Y+4, r25	; 0x04
     e0c:	29 89       	ldd	r18, Y+17	; 0x11
     e0e:	3a 89       	ldd	r19, Y+18	; 0x12
     e10:	4b 89       	ldd	r20, Y+19	; 0x13
     e12:	5c 89       	ldd	r21, Y+20	; 0x14
     e14:	6d 85       	ldd	r22, Y+13	; 0x0d
     e16:	7e 85       	ldd	r23, Y+14	; 0x0e
     e18:	8f 85       	ldd	r24, Y+15	; 0x0f
     e1a:	98 89       	ldd	r25, Y+16	; 0x10
     e1c:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     e20:	9b 01       	movw	r18, r22
     e22:	ac 01       	movw	r20, r24
     e24:	69 81       	ldd	r22, Y+1	; 0x01
     e26:	7a 81       	ldd	r23, Y+2	; 0x02
     e28:	8b 81       	ldd	r24, Y+3	; 0x03
     e2a:	9c 81       	ldd	r25, Y+4	; 0x04
     e2c:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     e30:	69 83       	std	Y+1, r22	; 0x01
     e32:	7a 83       	std	Y+2, r23	; 0x02
     e34:	8b 83       	std	Y+3, r24	; 0x03
     e36:	9c 83       	std	Y+4, r25	; 0x04
     e38:	a5 01       	movw	r20, r10
     e3a:	94 01       	movw	r18, r8
     e3c:	c7 01       	movw	r24, r14
     e3e:	b6 01       	movw	r22, r12
     e40:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     e44:	6b 01       	movw	r12, r22
     e46:	7c 01       	movw	r14, r24
     e48:	29 85       	ldd	r18, Y+9	; 0x09
     e4a:	3a 85       	ldd	r19, Y+10	; 0x0a
     e4c:	4b 85       	ldd	r20, Y+11	; 0x0b
     e4e:	5c 85       	ldd	r21, Y+12	; 0x0c
     e50:	6d 81       	ldd	r22, Y+5	; 0x05
     e52:	7e 81       	ldd	r23, Y+6	; 0x06
     e54:	8f 81       	ldd	r24, Y+7	; 0x07
     e56:	98 85       	ldd	r25, Y+8	; 0x08
     e58:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     e5c:	9b 01       	movw	r18, r22
     e5e:	ac 01       	movw	r20, r24
     e60:	c7 01       	movw	r24, r14
     e62:	b6 01       	movw	r22, r12
     e64:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     e68:	6b 01       	movw	r12, r22
     e6a:	7c 01       	movw	r14, r24
     e6c:	29 89       	ldd	r18, Y+17	; 0x11
     e6e:	3a 89       	ldd	r19, Y+18	; 0x12
     e70:	4b 89       	ldd	r20, Y+19	; 0x13
     e72:	5c 89       	ldd	r21, Y+20	; 0x14
     e74:	6d 85       	ldd	r22, Y+13	; 0x0d
     e76:	7e 85       	ldd	r23, Y+14	; 0x0e
     e78:	8f 85       	ldd	r24, Y+15	; 0x0f
     e7a:	98 89       	ldd	r25, Y+16	; 0x10
     e7c:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     e80:	9b 01       	movw	r18, r22
     e82:	ac 01       	movw	r20, r24
     e84:	c7 01       	movw	r24, r14
     e86:	b6 01       	movw	r22, r12
     e88:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     e8c:	6b 01       	movw	r12, r22
     e8e:	7c 01       	movw	r14, r24
     e90:	2d 89       	ldd	r18, Y+21	; 0x15
     e92:	3e 89       	ldd	r19, Y+22	; 0x16
     e94:	4f 89       	ldd	r20, Y+23	; 0x17
     e96:	58 8d       	ldd	r21, Y+24	; 0x18
     e98:	c3 01       	movw	r24, r6
     e9a:	b2 01       	movw	r22, r4
     e9c:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
     ea0:	9b 01       	movw	r18, r22
     ea2:	ac 01       	movw	r20, r24
     ea4:	c7 01       	movw	r24, r14
     ea6:	b6 01       	movw	r22, r12
     ea8:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
     eac:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <sqrt>
     eb0:	6b 01       	movw	r12, r22
     eb2:	7c 01       	movw	r14, r24
	q0 /= norm;
     eb4:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     eb8:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     ebc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     ec0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     ec4:	a7 01       	movw	r20, r14
     ec6:	96 01       	movw	r18, r12
     ec8:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
     ecc:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
     ed0:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     ed4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
     ed8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
	q1 /= norm;
     edc:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <q1>
     ee0:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <q1+0x1>
     ee4:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <q1+0x2>
     ee8:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <q1+0x3>
     eec:	a7 01       	movw	r20, r14
     eee:	96 01       	movw	r18, r12
     ef0:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
     ef4:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <q1>
     ef8:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <q1+0x1>
     efc:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <q1+0x2>
     f00:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <q1+0x3>
	q2 /= norm;
     f04:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <q2>
     f08:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <q2+0x1>
     f0c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <q2+0x2>
     f10:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <q2+0x3>
     f14:	a7 01       	movw	r20, r14
     f16:	96 01       	movw	r18, r12
     f18:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
     f1c:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <q2>
     f20:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <q2+0x1>
     f24:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <q2+0x2>
     f28:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <q2+0x3>
	q3 /= norm;
     f2c:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <q3>
     f30:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <q3+0x1>
     f34:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <q3+0x2>
     f38:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <q3+0x3>
     f3c:	a7 01       	movw	r20, r14
     f3e:	96 01       	movw	r18, r12
     f40:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
     f44:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <q3>
     f48:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <q3+0x1>
     f4c:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <q3+0x2>
     f50:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <q3+0x3>
}
     f54:	a4 96       	adiw	r28, 0x24	; 36
     f56:	0f b6       	in	r0, 0x3f	; 63
     f58:	f8 94       	cli
     f5a:	de bf       	out	0x3e, r29	; 62
     f5c:	0f be       	out	0x3f, r0	; 63
     f5e:	cd bf       	out	0x3d, r28	; 61
     f60:	df 91       	pop	r29
     f62:	cf 91       	pop	r28
     f64:	1f 91       	pop	r17
     f66:	0f 91       	pop	r16
     f68:	ff 90       	pop	r15
     f6a:	ef 90       	pop	r14
     f6c:	df 90       	pop	r13
     f6e:	cf 90       	pop	r12
     f70:	bf 90       	pop	r11
     f72:	af 90       	pop	r10
     f74:	9f 90       	pop	r9
     f76:	8f 90       	pop	r8
     f78:	7f 90       	pop	r7
     f7a:	6f 90       	pop	r6
     f7c:	5f 90       	pop	r5
     f7e:	4f 90       	pop	r4
     f80:	08 95       	ret

00000f82 <mpu6050_updateQuaternion>:

/*
 * update quaternion
 */
void mpu6050_updateQuaternion() {
     f82:	4f 92       	push	r4
     f84:	5f 92       	push	r5
     f86:	6f 92       	push	r6
     f88:	7f 92       	push	r7
     f8a:	af 92       	push	r10
     f8c:	bf 92       	push	r11
     f8e:	cf 92       	push	r12
     f90:	df 92       	push	r13
     f92:	ef 92       	push	r14
     f94:	ff 92       	push	r15
     f96:	0f 93       	push	r16
     f98:	1f 93       	push	r17
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	2b 97       	sbiw	r28, 0x0b	; 11
     fa4:	0f b6       	in	r0, 0x3f	; 63
     fa6:	f8 94       	cli
     fa8:	de bf       	out	0x3e, r29	; 62
     faa:	0f be       	out	0x3f, r0	; 63
     fac:	cd bf       	out	0x3d, r28	; 61
	double gyrs = 0;
	double gzrs = 0;

	//get raw data
	while(1) {
		mpu6050_readBit(MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_DATA_RDY_BIT, (uint8_t *)buffer);
     fae:	41 e6       	ldi	r20, 0x61	; 97
     fb0:	51 e0       	ldi	r21, 0x01	; 1
     fb2:	60 e0       	ldi	r22, 0x00	; 0
     fb4:	8a e3       	ldi	r24, 0x3A	; 58
     fb6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <mpu6050_readBit>
		if(buffer[0])
     fba:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <buffer>
     fbe:	81 11       	cpse	r24, r1
     fc0:	05 c0       	rjmp	.+10     	; 0xfcc <mpu6050_updateQuaternion+0x4a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fc2:	25 e3       	ldi	r18, 0x35	; 53
     fc4:	2a 95       	dec	r18
     fc6:	f1 f7       	brne	.-4      	; 0xfc4 <mpu6050_updateQuaternion+0x42>
     fc8:	00 00       	nop
     fca:	f1 cf       	rjmp	.-30     	; 0xfae <mpu6050_updateQuaternion+0x2c>
			break;
		_delay_us(10);
	}

	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14, (uint8_t *)buffer);
     fcc:	41 e6       	ldi	r20, 0x61	; 97
     fce:	51 e0       	ldi	r21, 0x01	; 1
     fd0:	6e e0       	ldi	r22, 0x0E	; 14
     fd2:	8b e3       	ldi	r24, 0x3B	; 59
     fd4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <mpu6050_readBytes>
    ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     fd8:	e1 e6       	ldi	r30, 0x61	; 97
     fda:	f1 e0       	ldi	r31, 0x01	; 1
     fdc:	80 81       	ld	r24, Z
     fde:	61 81       	ldd	r22, Z+1	; 0x01
    ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     fe0:	02 81       	ldd	r16, Z+2	; 0x02
     fe2:	33 81       	ldd	r19, Z+3	; 0x03
     fe4:	39 87       	std	Y+9, r19	; 0x09
    az = (((int16_t)buffer[4]) << 8) | buffer[5];
     fe6:	14 81       	ldd	r17, Z+4	; 0x04
     fe8:	95 81       	ldd	r25, Z+5	; 0x05
     fea:	9a 87       	std	Y+10, r25	; 0x0a
    gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     fec:	60 84       	ldd	r6, Z+8	; 0x08
     fee:	71 84       	ldd	r7, Z+9	; 0x09
    gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     ff0:	52 84       	ldd	r5, Z+10	; 0x0a
     ff2:	43 84       	ldd	r4, Z+11	; 0x0b
    gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     ff4:	e4 84       	ldd	r14, Z+12	; 0x0c
     ff6:	f5 84       	ldd	r15, Z+13	; 0x0d
	gyrs = (double)(gy)/MPU6050_GGAIN*0.01745329; //degree to radians
	gzrs = (double)(gz)/MPU6050_GGAIN*0.01745329; //degree to radians
	#endif

    //compute data
    mpu6050_mahonyUpdate(gxrs, gyrs, gzrs, axg, ayg, azg);
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	78 2b       	or	r23, r24
     ffc:	07 2e       	mov	r0, r23
     ffe:	00 0c       	add	r0, r0
    1000:	88 0b       	sbc	r24, r24
    1002:	99 0b       	sbc	r25, r25
    1004:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__floatsisf>
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	40 e8       	ldi	r20, 0x80	; 128
    100e:	58 e3       	ldi	r21, 0x38	; 56
    1010:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1014:	5b 01       	movw	r10, r22
    1016:	6c 01       	movw	r12, r24
    1018:	6f 2d       	mov	r22, r15
    101a:	70 e0       	ldi	r23, 0x00	; 0
    101c:	7e 29       	or	r23, r14
    101e:	63 5e       	subi	r22, 0xE3	; 227
    1020:	7f 4f       	sbci	r23, 0xFF	; 255
    1022:	07 2e       	mov	r0, r23
    1024:	00 0c       	add	r0, r0
    1026:	88 0b       	sbc	r24, r24
    1028:	99 0b       	sbc	r25, r25
    102a:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__floatsisf>
    102e:	23 e3       	ldi	r18, 0x33	; 51
    1030:	33 e3       	ldi	r19, 0x33	; 51
    1032:	43 e8       	ldi	r20, 0x83	; 131
    1034:	51 e4       	ldi	r21, 0x41	; 65
    1036:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
    103a:	24 e3       	ldi	r18, 0x34	; 52
    103c:	3a ef       	ldi	r19, 0xFA	; 250
    103e:	4e e8       	ldi	r20, 0x8E	; 142
    1040:	5c e3       	ldi	r21, 0x3C	; 60
    1042:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1046:	69 83       	std	Y+1, r22	; 0x01
    1048:	7a 83       	std	Y+2, r23	; 0x02
    104a:	8b 83       	std	Y+3, r24	; 0x03
    104c:	9c 83       	std	Y+4, r25	; 0x04
    104e:	64 2d       	mov	r22, r4
    1050:	70 e0       	ldi	r23, 0x00	; 0
    1052:	75 29       	or	r23, r5
    1054:	69 50       	subi	r22, 0x09	; 9
    1056:	71 09       	sbc	r23, r1
    1058:	07 2e       	mov	r0, r23
    105a:	00 0c       	add	r0, r0
    105c:	88 0b       	sbc	r24, r24
    105e:	99 0b       	sbc	r25, r25
    1060:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__floatsisf>
    1064:	23 e3       	ldi	r18, 0x33	; 51
    1066:	33 e3       	ldi	r19, 0x33	; 51
    1068:	43 e8       	ldi	r20, 0x83	; 131
    106a:	51 e4       	ldi	r21, 0x41	; 65
    106c:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
    1070:	24 e3       	ldi	r18, 0x34	; 52
    1072:	3a ef       	ldi	r19, 0xFA	; 250
    1074:	4e e8       	ldi	r20, 0x8E	; 142
    1076:	5c e3       	ldi	r21, 0x3C	; 60
    1078:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    107c:	6d 83       	std	Y+5, r22	; 0x05
    107e:	7e 83       	std	Y+6, r23	; 0x06
    1080:	8f 83       	std	Y+7, r24	; 0x07
    1082:	98 87       	std	Y+8, r25	; 0x08
    1084:	67 2d       	mov	r22, r7
    1086:	70 e0       	ldi	r23, 0x00	; 0
    1088:	76 29       	or	r23, r6
    108a:	66 5d       	subi	r22, 0xD6	; 214
    108c:	7f 4f       	sbci	r23, 0xFF	; 255
    108e:	07 2e       	mov	r0, r23
    1090:	00 0c       	add	r0, r0
    1092:	88 0b       	sbc	r24, r24
    1094:	99 0b       	sbc	r25, r25
    1096:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__floatsisf>
    109a:	23 e3       	ldi	r18, 0x33	; 51
    109c:	33 e3       	ldi	r19, 0x33	; 51
    109e:	43 e8       	ldi	r20, 0x83	; 131
    10a0:	51 e4       	ldi	r21, 0x41	; 65
    10a2:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <__divsf3>
    10a6:	24 e3       	ldi	r18, 0x34	; 52
    10a8:	3a ef       	ldi	r19, 0xFA	; 250
    10aa:	4e e8       	ldi	r20, 0x8E	; 142
    10ac:	5c e3       	ldi	r21, 0x3C	; 60
    10ae:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    10b2:	2b 01       	movw	r4, r22
    10b4:	3c 01       	movw	r6, r24
    10b6:	2a 85       	ldd	r18, Y+10	; 0x0a
    10b8:	62 2f       	mov	r22, r18
    10ba:	70 e0       	ldi	r23, 0x00	; 0
    10bc:	71 2b       	or	r23, r17
    10be:	07 2e       	mov	r0, r23
    10c0:	00 0c       	add	r0, r0
    10c2:	88 0b       	sbc	r24, r24
    10c4:	99 0b       	sbc	r25, r25
    10c6:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__floatsisf>
    10ca:	20 e0       	ldi	r18, 0x00	; 0
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	40 e8       	ldi	r20, 0x80	; 128
    10d0:	58 e3       	ldi	r21, 0x38	; 56
    10d2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    10d6:	9f 93       	push	r25
    10d8:	8f 93       	push	r24
    10da:	7f 93       	push	r23
    10dc:	6f 93       	push	r22
    10de:	39 85       	ldd	r19, Y+9	; 0x09
    10e0:	63 2f       	mov	r22, r19
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	cb 01       	movw	r24, r22
    10e6:	90 2b       	or	r25, r16
    10e8:	9b 87       	std	Y+11, r25	; 0x0b
    10ea:	8a 87       	std	Y+10, r24	; 0x0a
    10ec:	bc 01       	movw	r22, r24
    10ee:	99 0f       	add	r25, r25
    10f0:	88 0b       	sbc	r24, r24
    10f2:	99 0b       	sbc	r25, r25
    10f4:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <__floatsisf>
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	40 e8       	ldi	r20, 0x80	; 128
    10fe:	58 e3       	ldi	r21, 0x38	; 56
    1100:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1104:	9f 93       	push	r25
    1106:	8f 93       	push	r24
    1108:	7f 93       	push	r23
    110a:	6f 93       	push	r22
    110c:	e9 80       	ldd	r14, Y+1	; 0x01
    110e:	fa 80       	ldd	r15, Y+2	; 0x02
    1110:	0b 81       	ldd	r16, Y+3	; 0x03
    1112:	1c 81       	ldd	r17, Y+4	; 0x04
    1114:	2d 81       	ldd	r18, Y+5	; 0x05
    1116:	3e 81       	ldd	r19, Y+6	; 0x06
    1118:	4f 81       	ldd	r20, Y+7	; 0x07
    111a:	58 85       	ldd	r21, Y+8	; 0x08
    111c:	c3 01       	movw	r24, r6
    111e:	b2 01       	movw	r22, r4
    1120:	0e 94 bd 02 	call	0x57a	; 0x57a <mpu6050_mahonyUpdate>
}
    1124:	0f b6       	in	r0, 0x3f	; 63
    1126:	f8 94       	cli
    1128:	de bf       	out	0x3e, r29	; 62
    112a:	0f be       	out	0x3f, r0	; 63
    112c:	cd bf       	out	0x3d, r28	; 61
    112e:	2b 96       	adiw	r28, 0x0b	; 11
    1130:	0f b6       	in	r0, 0x3f	; 63
    1132:	f8 94       	cli
    1134:	de bf       	out	0x3e, r29	; 62
    1136:	0f be       	out	0x3f, r0	; 63
    1138:	cd bf       	out	0x3d, r28	; 61
    113a:	df 91       	pop	r29
    113c:	cf 91       	pop	r28
    113e:	1f 91       	pop	r17
    1140:	0f 91       	pop	r16
    1142:	ff 90       	pop	r15
    1144:	ef 90       	pop	r14
    1146:	df 90       	pop	r13
    1148:	cf 90       	pop	r12
    114a:	bf 90       	pop	r11
    114c:	af 90       	pop	r10
    114e:	7f 90       	pop	r7
    1150:	6f 90       	pop	r6
    1152:	5f 90       	pop	r5
    1154:	4f 90       	pop	r4
    1156:	08 95       	ret

00001158 <__vector_23>:

/*
 * update timer for attitude
 */
ISR(TIMER0_OVF_vect) {
    1158:	1f 92       	push	r1
    115a:	0f 92       	push	r0
    115c:	0f b6       	in	r0, 0x3f	; 63
    115e:	0f 92       	push	r0
    1160:	11 24       	eor	r1, r1
    1162:	2f 93       	push	r18
    1164:	3f 93       	push	r19
    1166:	4f 93       	push	r20
    1168:	5f 93       	push	r21
    116a:	6f 93       	push	r22
    116c:	7f 93       	push	r23
    116e:	8f 93       	push	r24
    1170:	9f 93       	push	r25
    1172:	af 93       	push	r26
    1174:	bf 93       	push	r27
    1176:	ef 93       	push	r30
    1178:	ff 93       	push	r31
	mpu6050_updateQuaternion();
    117a:	0e 94 c1 07 	call	0xf82	; 0xf82 <mpu6050_updateQuaternion>
}
    117e:	ff 91       	pop	r31
    1180:	ef 91       	pop	r30
    1182:	bf 91       	pop	r27
    1184:	af 91       	pop	r26
    1186:	9f 91       	pop	r25
    1188:	8f 91       	pop	r24
    118a:	7f 91       	pop	r23
    118c:	6f 91       	pop	r22
    118e:	5f 91       	pop	r21
    1190:	4f 91       	pop	r20
    1192:	3f 91       	pop	r19
    1194:	2f 91       	pop	r18
    1196:	0f 90       	pop	r0
    1198:	0f be       	out	0x3f, r0	; 63
    119a:	0f 90       	pop	r0
    119c:	1f 90       	pop	r1
    119e:	18 95       	reti

000011a0 <mpu6050_getQuaternion>:

/*
 * get quaternion
 */
void mpu6050_getQuaternion(double *qw, double *qx, double *qy, double *qz) {
    11a0:	cf 92       	push	r12
    11a2:	df 92       	push	r13
    11a4:	ef 92       	push	r14
    11a6:	ff 92       	push	r15
	*qw = q0;
    11a8:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
    11ac:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
    11b0:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
    11b4:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
    11b8:	fc 01       	movw	r30, r24
    11ba:	c0 82       	st	Z, r12
    11bc:	d1 82       	std	Z+1, r13	; 0x01
    11be:	e2 82       	std	Z+2, r14	; 0x02
    11c0:	f3 82       	std	Z+3, r15	; 0x03
	*qx = q1;
    11c2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <q1>
    11c6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <q1+0x1>
    11ca:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <q1+0x2>
    11ce:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <q1+0x3>
    11d2:	fb 01       	movw	r30, r22
    11d4:	80 83       	st	Z, r24
    11d6:	91 83       	std	Z+1, r25	; 0x01
    11d8:	a2 83       	std	Z+2, r26	; 0x02
    11da:	b3 83       	std	Z+3, r27	; 0x03
	*qy = q2;
    11dc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <q2>
    11e0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <q2+0x1>
    11e4:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <q2+0x2>
    11e8:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <q2+0x3>
    11ec:	fa 01       	movw	r30, r20
    11ee:	80 83       	st	Z, r24
    11f0:	91 83       	std	Z+1, r25	; 0x01
    11f2:	a2 83       	std	Z+2, r26	; 0x02
    11f4:	b3 83       	std	Z+3, r27	; 0x03
	*qz = q3;
    11f6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <q3>
    11fa:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <q3+0x1>
    11fe:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <q3+0x2>
    1202:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <q3+0x3>
    1206:	f9 01       	movw	r30, r18
    1208:	80 83       	st	Z, r24
    120a:	91 83       	std	Z+1, r25	; 0x01
    120c:	a2 83       	std	Z+2, r26	; 0x02
    120e:	b3 83       	std	Z+3, r27	; 0x03
}
    1210:	ff 90       	pop	r15
    1212:	ef 90       	pop	r14
    1214:	df 90       	pop	r13
    1216:	cf 90       	pop	r12
    1218:	08 95       	ret

0000121a <mpu6050_getRollPitchYaw>:
 * aerospace sequence, to obtain sensor attitude:
 * 1. rotate around sensor Z plane by yaw
 * 2. rotate around sensor Y plane by pitch
 * 3. rotate around sensor X plane by roll
 */
void mpu6050_getRollPitchYaw(double *roll, double *pitch, double *yaw) {
    121a:	2f 92       	push	r2
    121c:	3f 92       	push	r3
    121e:	4f 92       	push	r4
    1220:	5f 92       	push	r5
    1222:	6f 92       	push	r6
    1224:	7f 92       	push	r7
    1226:	8f 92       	push	r8
    1228:	9f 92       	push	r9
    122a:	af 92       	push	r10
    122c:	bf 92       	push	r11
    122e:	cf 92       	push	r12
    1230:	df 92       	push	r13
    1232:	ef 92       	push	r14
    1234:	ff 92       	push	r15
    1236:	0f 93       	push	r16
    1238:	1f 93       	push	r17
    123a:	cf 93       	push	r28
    123c:	df 93       	push	r29
    123e:	cd b7       	in	r28, 0x3d	; 61
    1240:	de b7       	in	r29, 0x3e	; 62
    1242:	62 97       	sbiw	r28, 0x12	; 18
    1244:	0f b6       	in	r0, 0x3f	; 63
    1246:	f8 94       	cli
    1248:	de bf       	out	0x3e, r29	; 62
    124a:	0f be       	out	0x3f, r0	; 63
    124c:	cd bf       	out	0x3d, r28	; 61
    124e:	1c 01       	movw	r2, r24
    1250:	8b 01       	movw	r16, r22
    1252:	5a 8b       	std	Y+18, r21	; 0x12
    1254:	49 8b       	std	Y+17, r20	; 0x11
	*yaw = atan2(2*q1*q2 - 2*q0*q3, 2*q0*q0 + 2*q1*q1 - 1);
    1256:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
    125a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
    125e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
    1262:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
    1266:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
    126a:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
    126e:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
    1272:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
    1276:	c0 90 18 01 	lds	r12, 0x0118	; 0x800118 <q1>
    127a:	d0 90 19 01 	lds	r13, 0x0119	; 0x800119 <q1+0x1>
    127e:	e0 90 1a 01 	lds	r14, 0x011A	; 0x80011a <q1+0x2>
    1282:	f0 90 1b 01 	lds	r15, 0x011B	; 0x80011b <q1+0x3>
    1286:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <q1>
    128a:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <q1+0x1>
    128e:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <q1+0x2>
    1292:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <q1+0x3>
    1296:	2d 83       	std	Y+5, r18	; 0x05
    1298:	3e 83       	std	Y+6, r19	; 0x06
    129a:	4f 83       	std	Y+7, r20	; 0x07
    129c:	58 87       	std	Y+8, r21	; 0x08
    129e:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <q1>
    12a2:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <q1+0x1>
    12a6:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <q1+0x2>
    12aa:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <q1+0x3>
    12ae:	29 83       	std	Y+1, r18	; 0x01
    12b0:	3a 83       	std	Y+2, r19	; 0x02
    12b2:	4b 83       	std	Y+3, r20	; 0x03
    12b4:	5c 83       	std	Y+4, r21	; 0x04
    12b6:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <q2>
    12ba:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <q2+0x1>
    12be:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <q2+0x2>
    12c2:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <q2+0x3>
    12c6:	29 87       	std	Y+9, r18	; 0x09
    12c8:	3a 87       	std	Y+10, r19	; 0x0a
    12ca:	4b 87       	std	Y+11, r20	; 0x0b
    12cc:	5c 87       	std	Y+12, r21	; 0x0c
    12ce:	40 90 00 01 	lds	r4, 0x0100	; 0x800100 <__data_start>
    12d2:	50 90 01 01 	lds	r5, 0x0101	; 0x800101 <__data_start+0x1>
    12d6:	60 90 02 01 	lds	r6, 0x0102	; 0x800102 <__data_start+0x2>
    12da:	70 90 03 01 	lds	r7, 0x0103	; 0x800103 <__data_start+0x3>
    12de:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <q3>
    12e2:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <q3+0x1>
    12e6:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <q3+0x2>
    12ea:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <q3+0x3>
    12ee:	2d 87       	std	Y+13, r18	; 0x0d
    12f0:	3e 87       	std	Y+14, r19	; 0x0e
    12f2:	4f 87       	std	Y+15, r20	; 0x0f
    12f4:	58 8b       	std	Y+16, r21	; 0x10
    12f6:	9b 01       	movw	r18, r22
    12f8:	ac 01       	movw	r20, r24
    12fa:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    12fe:	a5 01       	movw	r20, r10
    1300:	94 01       	movw	r18, r8
    1302:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1306:	4b 01       	movw	r8, r22
    1308:	5c 01       	movw	r10, r24
    130a:	a7 01       	movw	r20, r14
    130c:	96 01       	movw	r18, r12
    130e:	c7 01       	movw	r24, r14
    1310:	b6 01       	movw	r22, r12
    1312:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    1316:	2d 81       	ldd	r18, Y+5	; 0x05
    1318:	3e 81       	ldd	r19, Y+6	; 0x06
    131a:	4f 81       	ldd	r20, Y+7	; 0x07
    131c:	58 85       	ldd	r21, Y+8	; 0x08
    131e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1322:	9b 01       	movw	r18, r22
    1324:	ac 01       	movw	r20, r24
    1326:	c5 01       	movw	r24, r10
    1328:	b4 01       	movw	r22, r8
    132a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    132e:	20 e0       	ldi	r18, 0x00	; 0
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	40 e8       	ldi	r20, 0x80	; 128
    1334:	5f e3       	ldi	r21, 0x3F	; 63
    1336:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
    133a:	6b 01       	movw	r12, r22
    133c:	7c 01       	movw	r14, r24
    133e:	29 81       	ldd	r18, Y+1	; 0x01
    1340:	3a 81       	ldd	r19, Y+2	; 0x02
    1342:	4b 81       	ldd	r20, Y+3	; 0x03
    1344:	5c 81       	ldd	r21, Y+4	; 0x04
    1346:	ca 01       	movw	r24, r20
    1348:	b9 01       	movw	r22, r18
    134a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    134e:	29 85       	ldd	r18, Y+9	; 0x09
    1350:	3a 85       	ldd	r19, Y+10	; 0x0a
    1352:	4b 85       	ldd	r20, Y+11	; 0x0b
    1354:	5c 85       	ldd	r21, Y+12	; 0x0c
    1356:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    135a:	4b 01       	movw	r8, r22
    135c:	5c 01       	movw	r10, r24
    135e:	a3 01       	movw	r20, r6
    1360:	92 01       	movw	r18, r4
    1362:	c3 01       	movw	r24, r6
    1364:	b2 01       	movw	r22, r4
    1366:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    136a:	2d 85       	ldd	r18, Y+13	; 0x0d
    136c:	3e 85       	ldd	r19, Y+14	; 0x0e
    136e:	4f 85       	ldd	r20, Y+15	; 0x0f
    1370:	58 89       	ldd	r21, Y+16	; 0x10
    1372:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1376:	9b 01       	movw	r18, r22
    1378:	ac 01       	movw	r20, r24
    137a:	c5 01       	movw	r24, r10
    137c:	b4 01       	movw	r22, r8
    137e:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
    1382:	a7 01       	movw	r20, r14
    1384:	96 01       	movw	r18, r12
    1386:	0e 94 99 0c 	call	0x1932	; 0x1932 <atan2>
    138a:	e9 89       	ldd	r30, Y+17	; 0x11
    138c:	fa 89       	ldd	r31, Y+18	; 0x12
    138e:	60 83       	st	Z, r22
    1390:	71 83       	std	Z+1, r23	; 0x01
    1392:	82 83       	std	Z+2, r24	; 0x02
    1394:	93 83       	std	Z+3, r25	; 0x03
	*pitch = -asin(2*q1*q3 + 2*q0*q2);
    1396:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <q1>
    139a:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <q1+0x1>
    139e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <q1+0x2>
    13a2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <q1+0x3>
    13a6:	80 90 10 01 	lds	r8, 0x0110	; 0x800110 <q3>
    13aa:	90 90 11 01 	lds	r9, 0x0111	; 0x800111 <q3+0x1>
    13ae:	a0 90 12 01 	lds	r10, 0x0112	; 0x800112 <q3+0x2>
    13b2:	b0 90 13 01 	lds	r11, 0x0113	; 0x800113 <q3+0x3>
    13b6:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
    13ba:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
    13be:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
    13c2:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
    13c6:	40 90 14 01 	lds	r4, 0x0114	; 0x800114 <q2>
    13ca:	50 90 15 01 	lds	r5, 0x0115	; 0x800115 <q2+0x1>
    13ce:	60 90 16 01 	lds	r6, 0x0116	; 0x800116 <q2+0x2>
    13d2:	70 90 17 01 	lds	r7, 0x0117	; 0x800117 <q2+0x3>
    13d6:	9b 01       	movw	r18, r22
    13d8:	ac 01       	movw	r20, r24
    13da:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    13de:	a5 01       	movw	r20, r10
    13e0:	94 01       	movw	r18, r8
    13e2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    13e6:	4b 01       	movw	r8, r22
    13e8:	5c 01       	movw	r10, r24
    13ea:	a7 01       	movw	r20, r14
    13ec:	96 01       	movw	r18, r12
    13ee:	c7 01       	movw	r24, r14
    13f0:	b6 01       	movw	r22, r12
    13f2:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    13f6:	a3 01       	movw	r20, r6
    13f8:	92 01       	movw	r18, r4
    13fa:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    13fe:	9b 01       	movw	r18, r22
    1400:	ac 01       	movw	r20, r24
    1402:	c5 01       	movw	r24, r10
    1404:	b4 01       	movw	r22, r8
    1406:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    140a:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <asin>
    140e:	dc 01       	movw	r26, r24
    1410:	cb 01       	movw	r24, r22
    1412:	b0 58       	subi	r27, 0x80	; 128
    1414:	f8 01       	movw	r30, r16
    1416:	80 83       	st	Z, r24
    1418:	91 83       	std	Z+1, r25	; 0x01
    141a:	a2 83       	std	Z+2, r26	; 0x02
    141c:	b3 83       	std	Z+3, r27	; 0x03
	*roll = atan2(2*q2*q3 - 2*q0*q1, 2*q0*q0 + 2*q3*q3 - 1);
    141e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
    1422:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
    1426:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
    142a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
    142e:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_start>
    1432:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_start+0x1>
    1436:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_start+0x2>
    143a:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_start+0x3>
    143e:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <q3>
    1442:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <q3+0x1>
    1446:	e0 90 12 01 	lds	r14, 0x0112	; 0x800112 <q3+0x2>
    144a:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <q3+0x3>
    144e:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <q3>
    1452:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <q3+0x1>
    1456:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <q3+0x2>
    145a:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <q3+0x3>
    145e:	2d 83       	std	Y+5, r18	; 0x05
    1460:	3e 83       	std	Y+6, r19	; 0x06
    1462:	4f 83       	std	Y+7, r20	; 0x07
    1464:	58 87       	std	Y+8, r21	; 0x08
    1466:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <q2>
    146a:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <q2+0x1>
    146e:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <q2+0x2>
    1472:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <q2+0x3>
    1476:	29 83       	std	Y+1, r18	; 0x01
    1478:	3a 83       	std	Y+2, r19	; 0x02
    147a:	4b 83       	std	Y+3, r20	; 0x03
    147c:	5c 83       	std	Y+4, r21	; 0x04
    147e:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <q3>
    1482:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <q3+0x1>
    1486:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <q3+0x2>
    148a:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <q3+0x3>
    148e:	29 87       	std	Y+9, r18	; 0x09
    1490:	3a 87       	std	Y+10, r19	; 0x0a
    1492:	4b 87       	std	Y+11, r20	; 0x0b
    1494:	5c 87       	std	Y+12, r21	; 0x0c
    1496:	40 90 00 01 	lds	r4, 0x0100	; 0x800100 <__data_start>
    149a:	50 90 01 01 	lds	r5, 0x0101	; 0x800101 <__data_start+0x1>
    149e:	60 90 02 01 	lds	r6, 0x0102	; 0x800102 <__data_start+0x2>
    14a2:	70 90 03 01 	lds	r7, 0x0103	; 0x800103 <__data_start+0x3>
    14a6:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <q1>
    14aa:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <q1+0x1>
    14ae:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <q1+0x2>
    14b2:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <q1+0x3>
    14b6:	2d 87       	std	Y+13, r18	; 0x0d
    14b8:	3e 87       	std	Y+14, r19	; 0x0e
    14ba:	4f 87       	std	Y+15, r20	; 0x0f
    14bc:	58 8b       	std	Y+16, r21	; 0x10
    14be:	9b 01       	movw	r18, r22
    14c0:	ac 01       	movw	r20, r24
    14c2:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    14c6:	a5 01       	movw	r20, r10
    14c8:	94 01       	movw	r18, r8
    14ca:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    14ce:	4b 01       	movw	r8, r22
    14d0:	5c 01       	movw	r10, r24
    14d2:	a7 01       	movw	r20, r14
    14d4:	96 01       	movw	r18, r12
    14d6:	c7 01       	movw	r24, r14
    14d8:	b6 01       	movw	r22, r12
    14da:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    14de:	2d 81       	ldd	r18, Y+5	; 0x05
    14e0:	3e 81       	ldd	r19, Y+6	; 0x06
    14e2:	4f 81       	ldd	r20, Y+7	; 0x07
    14e4:	58 85       	ldd	r21, Y+8	; 0x08
    14e6:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    14ea:	9b 01       	movw	r18, r22
    14ec:	ac 01       	movw	r20, r24
    14ee:	c5 01       	movw	r24, r10
    14f0:	b4 01       	movw	r22, r8
    14f2:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	30 e0       	ldi	r19, 0x00	; 0
    14fa:	40 e8       	ldi	r20, 0x80	; 128
    14fc:	5f e3       	ldi	r21, 0x3F	; 63
    14fe:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
    1502:	6b 01       	movw	r12, r22
    1504:	7c 01       	movw	r14, r24
    1506:	29 81       	ldd	r18, Y+1	; 0x01
    1508:	3a 81       	ldd	r19, Y+2	; 0x02
    150a:	4b 81       	ldd	r20, Y+3	; 0x03
    150c:	5c 81       	ldd	r21, Y+4	; 0x04
    150e:	ca 01       	movw	r24, r20
    1510:	b9 01       	movw	r22, r18
    1512:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    1516:	29 85       	ldd	r18, Y+9	; 0x09
    1518:	3a 85       	ldd	r19, Y+10	; 0x0a
    151a:	4b 85       	ldd	r20, Y+11	; 0x0b
    151c:	5c 85       	ldd	r21, Y+12	; 0x0c
    151e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1522:	4b 01       	movw	r8, r22
    1524:	5c 01       	movw	r10, r24
    1526:	a3 01       	movw	r20, r6
    1528:	92 01       	movw	r18, r4
    152a:	c3 01       	movw	r24, r6
    152c:	b2 01       	movw	r22, r4
    152e:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__addsf3>
    1532:	2d 85       	ldd	r18, Y+13	; 0x0d
    1534:	3e 85       	ldd	r19, Y+14	; 0x0e
    1536:	4f 85       	ldd	r20, Y+15	; 0x0f
    1538:	58 89       	ldd	r21, Y+16	; 0x10
    153a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    153e:	9b 01       	movw	r18, r22
    1540:	ac 01       	movw	r20, r24
    1542:	c5 01       	movw	r24, r10
    1544:	b4 01       	movw	r22, r8
    1546:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
    154a:	a7 01       	movw	r20, r14
    154c:	96 01       	movw	r18, r12
    154e:	0e 94 99 0c 	call	0x1932	; 0x1932 <atan2>
    1552:	f1 01       	movw	r30, r2
    1554:	60 83       	st	Z, r22
    1556:	71 83       	std	Z+1, r23	; 0x01
    1558:	82 83       	std	Z+2, r24	; 0x02
    155a:	93 83       	std	Z+3, r25	; 0x03
}
    155c:	62 96       	adiw	r28, 0x12	; 18
    155e:	0f b6       	in	r0, 0x3f	; 63
    1560:	f8 94       	cli
    1562:	de bf       	out	0x3e, r29	; 62
    1564:	0f be       	out	0x3f, r0	; 63
    1566:	cd bf       	out	0x3d, r28	; 61
    1568:	df 91       	pop	r29
    156a:	cf 91       	pop	r28
    156c:	1f 91       	pop	r17
    156e:	0f 91       	pop	r16
    1570:	ff 90       	pop	r15
    1572:	ef 90       	pop	r14
    1574:	df 90       	pop	r13
    1576:	cf 90       	pop	r12
    1578:	bf 90       	pop	r11
    157a:	af 90       	pop	r10
    157c:	9f 90       	pop	r9
    157e:	8f 90       	pop	r8
    1580:	7f 90       	pop	r7
    1582:	6f 90       	pop	r6
    1584:	5f 90       	pop	r5
    1586:	4f 90       	pop	r4
    1588:	3f 90       	pop	r3
    158a:	2f 90       	pop	r2
    158c:	08 95       	ret

0000158e <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    158e:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1592:	8c e0       	ldi	r24, 0x0C	; 12
    1594:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    1598:	08 95       	ret

0000159a <i2c_start>:
    159a:	94 ea       	ldi	r25, 0xA4	; 164
    159c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    15a0:	4f ef       	ldi	r20, 0xFF	; 255
    15a2:	50 e0       	ldi	r21, 0x00	; 0
    15a4:	60 e0       	ldi	r22, 0x00	; 0
    15a6:	70 e0       	ldi	r23, 0x00	; 0
    15a8:	ec eb       	ldi	r30, 0xBC	; 188
    15aa:	f0 e0       	ldi	r31, 0x00	; 0
    15ac:	90 81       	ld	r25, Z
    15ae:	99 23       	and	r25, r25
    15b0:	34 f0       	brlt	.+12     	; 0x15be <i2c_start+0x24>
    15b2:	41 50       	subi	r20, 0x01	; 1
    15b4:	51 09       	sbc	r21, r1
    15b6:	61 09       	sbc	r22, r1
    15b8:	71 09       	sbc	r23, r1
    15ba:	c0 f7       	brcc	.-16     	; 0x15ac <i2c_start+0x12>
    15bc:	04 c0       	rjmp	.+8      	; 0x15c6 <i2c_start+0x2c>
    15be:	45 2b       	or	r20, r21
    15c0:	46 2b       	or	r20, r22
    15c2:	47 2b       	or	r20, r23
    15c4:	41 f1       	breq	.+80     	; 0x1616 <i2c_start+0x7c>
    15c6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    15ca:	98 7f       	andi	r25, 0xF8	; 248
    15cc:	98 30       	cpi	r25, 0x08	; 8
    15ce:	11 f0       	breq	.+4      	; 0x15d4 <i2c_start+0x3a>
    15d0:	90 31       	cpi	r25, 0x10	; 16
    15d2:	19 f5       	brne	.+70     	; 0x161a <i2c_start+0x80>
    15d4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    15d8:	84 e8       	ldi	r24, 0x84	; 132
    15da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    15de:	8f ef       	ldi	r24, 0xFF	; 255
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	a0 e0       	ldi	r26, 0x00	; 0
    15e4:	b0 e0       	ldi	r27, 0x00	; 0
    15e6:	ec eb       	ldi	r30, 0xBC	; 188
    15e8:	f0 e0       	ldi	r31, 0x00	; 0
    15ea:	20 81       	ld	r18, Z
    15ec:	22 23       	and	r18, r18
    15ee:	2c f0       	brlt	.+10     	; 0x15fa <i2c_start+0x60>
    15f0:	01 97       	sbiw	r24, 0x01	; 1
    15f2:	a1 09       	sbc	r26, r1
    15f4:	b1 09       	sbc	r27, r1
    15f6:	c8 f7       	brcc	.-14     	; 0x15ea <i2c_start+0x50>
    15f8:	04 c0       	rjmp	.+8      	; 0x1602 <i2c_start+0x68>
    15fa:	89 2b       	or	r24, r25
    15fc:	8a 2b       	or	r24, r26
    15fe:	8b 2b       	or	r24, r27
    1600:	71 f0       	breq	.+28     	; 0x161e <i2c_start+0x84>
    1602:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1606:	98 7f       	andi	r25, 0xF8	; 248
    1608:	98 31       	cpi	r25, 0x18	; 24
    160a:	59 f0       	breq	.+22     	; 0x1622 <i2c_start+0x88>
    160c:	81 e0       	ldi	r24, 0x01	; 1
    160e:	90 34       	cpi	r25, 0x40	; 64
    1610:	49 f4       	brne	.+18     	; 0x1624 <i2c_start+0x8a>
    1612:	80 e0       	ldi	r24, 0x00	; 0
    1614:	08 95       	ret
    1616:	81 e0       	ldi	r24, 0x01	; 1
    1618:	08 95       	ret
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	08 95       	ret
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	08 95       	ret
    1622:	80 e0       	ldi	r24, 0x00	; 0
    1624:	08 95       	ret

00001626 <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    1626:	84 e9       	ldi	r24, 0x94	; 148
    1628:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    162c:	80 e0       	ldi	r24, 0x00	; 0
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	ec eb       	ldi	r30, 0xBC	; 188
    1632:	f0 e0       	ldi	r31, 0x00	; 0
    1634:	20 81       	ld	r18, Z
    1636:	24 ff       	sbrs	r18, 4
    1638:	05 c0       	rjmp	.+10     	; 0x1644 <i2c_stop+0x1e>
    163a:	01 96       	adiw	r24, 0x01	; 1
    163c:	81 15       	cp	r24, r1
    163e:	21 e0       	ldi	r18, 0x01	; 1
    1640:	92 07       	cpc	r25, r18
    1642:	c1 f7       	brne	.-16     	; 0x1634 <i2c_stop+0xe>
    1644:	08 95       	ret

00001646 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1646:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
    164a:	84 e8       	ldi	r24, 0x84	; 132
    164c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    1650:	8f ef       	ldi	r24, 0xFF	; 255
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	a0 e0       	ldi	r26, 0x00	; 0
    1656:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1658:	ec eb       	ldi	r30, 0xBC	; 188
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	20 81       	ld	r18, Z
    165e:	22 23       	and	r18, r18
    1660:	2c f0       	brlt	.+10     	; 0x166c <i2c_write+0x26>
    1662:	01 97       	sbiw	r24, 0x01	; 1
    1664:	a1 09       	sbc	r26, r1
    1666:	b1 09       	sbc	r27, r1
    1668:	c8 f7       	brcc	.-14     	; 0x165c <i2c_write+0x16>
    166a:	04 c0       	rjmp	.+8      	; 0x1674 <i2c_write+0x2e>
	if(i2c_timer == 0)
    166c:	89 2b       	or	r24, r25
    166e:	8a 2b       	or	r24, r26
    1670:	8b 2b       	or	r24, r27
    1672:	41 f0       	breq	.+16     	; 0x1684 <i2c_write+0x3e>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    1674:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    1678:	98 7f       	andi	r25, 0xF8	; 248
    167a:	81 e0       	ldi	r24, 0x01	; 1
    167c:	98 32       	cpi	r25, 0x28	; 40
    167e:	19 f4       	brne	.+6      	; 0x1686 <i2c_write+0x40>
    1680:	80 e0       	ldi	r24, 0x00	; 0
    1682:	08 95       	ret
    1684:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    1686:	08 95       	ret

00001688 <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    1688:	84 ec       	ldi	r24, 0xC4	; 196
    168a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	i2c_timer = I2C_TIMER_DELAY;
    168e:	8f ef       	ldi	r24, 0xFF	; 255
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	a0 e0       	ldi	r26, 0x00	; 0
    1694:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1696:	ec eb       	ldi	r30, 0xBC	; 188
    1698:	f0 e0       	ldi	r31, 0x00	; 0
    169a:	20 81       	ld	r18, Z
    169c:	22 23       	and	r18, r18
    169e:	2c f0       	brlt	.+10     	; 0x16aa <i2c_readAck+0x22>
    16a0:	01 97       	sbiw	r24, 0x01	; 1
    16a2:	a1 09       	sbc	r26, r1
    16a4:	b1 09       	sbc	r27, r1
    16a6:	c8 f7       	brcc	.-14     	; 0x169a <i2c_readAck+0x12>
    16a8:	04 c0       	rjmp	.+8      	; 0x16b2 <i2c_readAck+0x2a>
	if(i2c_timer == 0)
    16aa:	89 2b       	or	r24, r25
    16ac:	8a 2b       	or	r24, r26
    16ae:	8b 2b       	or	r24, r27
    16b0:	19 f0       	breq	.+6      	; 0x16b8 <i2c_readAck+0x30>
		return 0;

    return TWDR;
    16b2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    16b6:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    16b8:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    16ba:	08 95       	ret

000016bc <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    16bc:	84 e8       	ldi	r24, 0x84	; 132
    16be:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	i2c_timer = I2C_TIMER_DELAY;
    16c2:	8f ef       	ldi	r24, 0xFF	; 255
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	a0 e0       	ldi	r26, 0x00	; 0
    16c8:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    16ca:	ec eb       	ldi	r30, 0xBC	; 188
    16cc:	f0 e0       	ldi	r31, 0x00	; 0
    16ce:	20 81       	ld	r18, Z
    16d0:	22 23       	and	r18, r18
    16d2:	2c f0       	brlt	.+10     	; 0x16de <i2c_readNak+0x22>
    16d4:	01 97       	sbiw	r24, 0x01	; 1
    16d6:	a1 09       	sbc	r26, r1
    16d8:	b1 09       	sbc	r27, r1
    16da:	c8 f7       	brcc	.-14     	; 0x16ce <i2c_readNak+0x12>
    16dc:	04 c0       	rjmp	.+8      	; 0x16e6 <i2c_readNak+0x2a>
	if(i2c_timer == 0)
    16de:	89 2b       	or	r24, r25
    16e0:	8a 2b       	or	r24, r26
    16e2:	8b 2b       	or	r24, r27
    16e4:	19 f0       	breq	.+6      	; 0x16ec <i2c_readNak+0x30>
		return 0;
	
    return TWDR;
    16e6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    16ea:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    16ec:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    16ee:	08 95       	ret

000016f0 <__vector_25>:
    UART_RxTail = tmptail; 
    
    UART_LastRxError = 0;
    return (lastRxError << 8) + data;

}/* uart_getc */
    16f0:	1f 92       	push	r1
    16f2:	0f 92       	push	r0
    16f4:	0f b6       	in	r0, 0x3f	; 63
    16f6:	0f 92       	push	r0
    16f8:	11 24       	eor	r1, r1
    16fa:	2f 93       	push	r18
    16fc:	8f 93       	push	r24
    16fe:	9f 93       	push	r25
    1700:	ef 93       	push	r30
    1702:	ff 93       	push	r31
    1704:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    1708:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    170c:	8c 71       	andi	r24, 0x1C	; 28
    170e:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <UART_RxHead>
    1712:	ef 5f       	subi	r30, 0xFF	; 255
    1714:	ef 71       	andi	r30, 0x1F	; 31
    1716:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <UART_RxTail>
    171a:	e9 17       	cp	r30, r25
    171c:	39 f0       	breq	.+14     	; 0x172c <__vector_25+0x3c>
    171e:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <UART_RxHead>
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	ef 5d       	subi	r30, 0xDF	; 223
    1726:	fe 4f       	sbci	r31, 0xFE	; 254
    1728:	20 83       	st	Z, r18
    172a:	01 c0       	rjmp	.+2      	; 0x172e <__vector_25+0x3e>
    172c:	82 e0       	ldi	r24, 0x02	; 2
    172e:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <UART_LastRxError>
    1732:	89 2b       	or	r24, r25
    1734:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <UART_LastRxError>
    1738:	ff 91       	pop	r31
    173a:	ef 91       	pop	r30
    173c:	9f 91       	pop	r25
    173e:	8f 91       	pop	r24
    1740:	2f 91       	pop	r18
    1742:	0f 90       	pop	r0
    1744:	0f be       	out	0x3f, r0	; 63
    1746:	0f 90       	pop	r0
    1748:	1f 90       	pop	r1
    174a:	18 95       	reti

0000174c <__vector_26>:
    174c:	1f 92       	push	r1
    174e:	0f 92       	push	r0
    1750:	0f b6       	in	r0, 0x3f	; 63
    1752:	0f 92       	push	r0
    1754:	11 24       	eor	r1, r1
    1756:	8f 93       	push	r24
    1758:	9f 93       	push	r25
    175a:	ef 93       	push	r30
    175c:	ff 93       	push	r31
    175e:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <UART_TxHead>
    1762:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <UART_TxTail>
    1766:	98 17       	cp	r25, r24
    1768:	69 f0       	breq	.+26     	; 0x1784 <__vector_26+0x38>
    176a:	e0 91 1f 01 	lds	r30, 0x011F	; 0x80011f <UART_TxTail>
    176e:	ef 5f       	subi	r30, 0xFF	; 255
    1770:	ef 71       	andi	r30, 0x1F	; 31
    1772:	e0 93 1f 01 	sts	0x011F, r30	; 0x80011f <UART_TxTail>
    1776:	f0 e0       	ldi	r31, 0x00	; 0
    1778:	ef 5b       	subi	r30, 0xBF	; 191
    177a:	fe 4f       	sbci	r31, 0xFE	; 254
    177c:	80 81       	ld	r24, Z
    177e:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    1782:	05 c0       	rjmp	.+10     	; 0x178e <__vector_26+0x42>
    1784:	e9 ec       	ldi	r30, 0xC9	; 201
    1786:	f0 e0       	ldi	r31, 0x00	; 0
    1788:	80 81       	ld	r24, Z
    178a:	8f 7d       	andi	r24, 0xDF	; 223
    178c:	80 83       	st	Z, r24
    178e:	ff 91       	pop	r31
    1790:	ef 91       	pop	r30
    1792:	9f 91       	pop	r25
    1794:	8f 91       	pop	r24
    1796:	0f 90       	pop	r0
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	0f 90       	pop	r0
    179c:	1f 90       	pop	r1
    179e:	18 95       	reti

000017a0 <uart_init>:
    17a0:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <UART_TxHead>
    17a4:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <UART_TxTail>
    17a8:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <UART_RxHead>
    17ac:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <UART_RxTail>
    17b0:	99 23       	and	r25, r25
    17b2:	1c f4       	brge	.+6      	; 0x17ba <uart_init+0x1a>
    17b4:	22 e0       	ldi	r18, 0x02	; 2
    17b6:	20 93 c8 00 	sts	0x00C8, r18	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
    17ba:	90 78       	andi	r25, 0x80	; 128
    17bc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
    17c0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
    17c4:	88 e9       	ldi	r24, 0x98	; 152
    17c6:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    17ca:	86 e0       	ldi	r24, 0x06	; 6
    17cc:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7e00ca>
    17d0:	08 95       	ret

000017d2 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
    17d2:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <UART_TxHead>
    17d6:	2f 5f       	subi	r18, 0xFF	; 255
    17d8:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
    17da:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <UART_TxTail>
    17de:	29 17       	cp	r18, r25
    17e0:	e1 f3       	breq	.-8      	; 0x17da <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
    17e2:	e2 2f       	mov	r30, r18
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	ef 5b       	subi	r30, 0xBF	; 191
    17e8:	fe 4f       	sbci	r31, 0xFE	; 254
    17ea:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
    17ec:	20 93 20 01 	sts	0x0120, r18	; 0x800120 <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
    17f0:	e9 ec       	ldi	r30, 0xC9	; 201
    17f2:	f0 e0       	ldi	r31, 0x00	; 0
    17f4:	80 81       	ld	r24, Z
    17f6:	80 62       	ori	r24, 0x20	; 32
    17f8:	80 83       	st	Z, r24
    17fa:	08 95       	ret

000017fc <__subsf3>:
    17fc:	50 58       	subi	r21, 0x80	; 128

000017fe <__addsf3>:
    17fe:	bb 27       	eor	r27, r27
    1800:	aa 27       	eor	r26, r26
    1802:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3x>
    1806:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__fp_round>
    180a:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__fp_pscA>
    180e:	38 f0       	brcs	.+14     	; 0x181e <__addsf3+0x20>
    1810:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <__fp_pscB>
    1814:	20 f0       	brcs	.+8      	; 0x181e <__addsf3+0x20>
    1816:	39 f4       	brne	.+14     	; 0x1826 <__addsf3+0x28>
    1818:	9f 3f       	cpi	r25, 0xFF	; 255
    181a:	19 f4       	brne	.+6      	; 0x1822 <__addsf3+0x24>
    181c:	26 f4       	brtc	.+8      	; 0x1826 <__addsf3+0x28>
    181e:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__fp_nan>
    1822:	0e f4       	brtc	.+2      	; 0x1826 <__addsf3+0x28>
    1824:	e0 95       	com	r30
    1826:	e7 fb       	bst	r30, 7
    1828:	0c 94 f0 0d 	jmp	0x1be0	; 0x1be0 <__fp_inf>

0000182c <__addsf3x>:
    182c:	e9 2f       	mov	r30, r25
    182e:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <__fp_split3>
    1832:	58 f3       	brcs	.-42     	; 0x180a <__addsf3+0xc>
    1834:	ba 17       	cp	r27, r26
    1836:	62 07       	cpc	r22, r18
    1838:	73 07       	cpc	r23, r19
    183a:	84 07       	cpc	r24, r20
    183c:	95 07       	cpc	r25, r21
    183e:	20 f0       	brcs	.+8      	; 0x1848 <__addsf3x+0x1c>
    1840:	79 f4       	brne	.+30     	; 0x1860 <__addsf3x+0x34>
    1842:	a6 f5       	brtc	.+104    	; 0x18ac <__addsf3x+0x80>
    1844:	0c 94 75 0e 	jmp	0x1cea	; 0x1cea <__fp_zero>
    1848:	0e f4       	brtc	.+2      	; 0x184c <__addsf3x+0x20>
    184a:	e0 95       	com	r30
    184c:	0b 2e       	mov	r0, r27
    184e:	ba 2f       	mov	r27, r26
    1850:	a0 2d       	mov	r26, r0
    1852:	0b 01       	movw	r0, r22
    1854:	b9 01       	movw	r22, r18
    1856:	90 01       	movw	r18, r0
    1858:	0c 01       	movw	r0, r24
    185a:	ca 01       	movw	r24, r20
    185c:	a0 01       	movw	r20, r0
    185e:	11 24       	eor	r1, r1
    1860:	ff 27       	eor	r31, r31
    1862:	59 1b       	sub	r21, r25
    1864:	99 f0       	breq	.+38     	; 0x188c <__addsf3x+0x60>
    1866:	59 3f       	cpi	r21, 0xF9	; 249
    1868:	50 f4       	brcc	.+20     	; 0x187e <__addsf3x+0x52>
    186a:	50 3e       	cpi	r21, 0xE0	; 224
    186c:	68 f1       	brcs	.+90     	; 0x18c8 <__addsf3x+0x9c>
    186e:	1a 16       	cp	r1, r26
    1870:	f0 40       	sbci	r31, 0x00	; 0
    1872:	a2 2f       	mov	r26, r18
    1874:	23 2f       	mov	r18, r19
    1876:	34 2f       	mov	r19, r20
    1878:	44 27       	eor	r20, r20
    187a:	58 5f       	subi	r21, 0xF8	; 248
    187c:	f3 cf       	rjmp	.-26     	; 0x1864 <__addsf3x+0x38>
    187e:	46 95       	lsr	r20
    1880:	37 95       	ror	r19
    1882:	27 95       	ror	r18
    1884:	a7 95       	ror	r26
    1886:	f0 40       	sbci	r31, 0x00	; 0
    1888:	53 95       	inc	r21
    188a:	c9 f7       	brne	.-14     	; 0x187e <__addsf3x+0x52>
    188c:	7e f4       	brtc	.+30     	; 0x18ac <__addsf3x+0x80>
    188e:	1f 16       	cp	r1, r31
    1890:	ba 0b       	sbc	r27, r26
    1892:	62 0b       	sbc	r22, r18
    1894:	73 0b       	sbc	r23, r19
    1896:	84 0b       	sbc	r24, r20
    1898:	ba f0       	brmi	.+46     	; 0x18c8 <__addsf3x+0x9c>
    189a:	91 50       	subi	r25, 0x01	; 1
    189c:	a1 f0       	breq	.+40     	; 0x18c6 <__addsf3x+0x9a>
    189e:	ff 0f       	add	r31, r31
    18a0:	bb 1f       	adc	r27, r27
    18a2:	66 1f       	adc	r22, r22
    18a4:	77 1f       	adc	r23, r23
    18a6:	88 1f       	adc	r24, r24
    18a8:	c2 f7       	brpl	.-16     	; 0x189a <__addsf3x+0x6e>
    18aa:	0e c0       	rjmp	.+28     	; 0x18c8 <__addsf3x+0x9c>
    18ac:	ba 0f       	add	r27, r26
    18ae:	62 1f       	adc	r22, r18
    18b0:	73 1f       	adc	r23, r19
    18b2:	84 1f       	adc	r24, r20
    18b4:	48 f4       	brcc	.+18     	; 0x18c8 <__addsf3x+0x9c>
    18b6:	87 95       	ror	r24
    18b8:	77 95       	ror	r23
    18ba:	67 95       	ror	r22
    18bc:	b7 95       	ror	r27
    18be:	f7 95       	ror	r31
    18c0:	9e 3f       	cpi	r25, 0xFE	; 254
    18c2:	08 f0       	brcs	.+2      	; 0x18c6 <__addsf3x+0x9a>
    18c4:	b0 cf       	rjmp	.-160    	; 0x1826 <__addsf3+0x28>
    18c6:	93 95       	inc	r25
    18c8:	88 0f       	add	r24, r24
    18ca:	08 f0       	brcs	.+2      	; 0x18ce <__addsf3x+0xa2>
    18cc:	99 27       	eor	r25, r25
    18ce:	ee 0f       	add	r30, r30
    18d0:	97 95       	ror	r25
    18d2:	87 95       	ror	r24
    18d4:	08 95       	ret

000018d6 <asin>:
    18d6:	9f 93       	push	r25
    18d8:	9f 77       	andi	r25, 0x7F	; 127
    18da:	ee e3       	ldi	r30, 0x3E	; 62
    18dc:	89 37       	cpi	r24, 0x79	; 121
    18de:	9e 07       	cpc	r25, r30
    18e0:	28 f4       	brcc	.+10     	; 0x18ec <asin+0x16>
    18e2:	ec ea       	ldi	r30, 0xAC	; 172
    18e4:	f0 e0       	ldi	r31, 0x00	; 0
    18e6:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <__fp_powsodd>
    18ea:	0c c0       	rjmp	.+24     	; 0x1904 <asin+0x2e>
    18ec:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <__fp_arccos>
    18f0:	90 58       	subi	r25, 0x80	; 128
    18f2:	a2 ea       	ldi	r26, 0xA2	; 162
    18f4:	2a ed       	ldi	r18, 0xDA	; 218
    18f6:	3f e0       	ldi	r19, 0x0F	; 15
    18f8:	49 ec       	ldi	r20, 0xC9	; 201
    18fa:	5f e3       	ldi	r21, 0x3F	; 63
    18fc:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3x>
    1900:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_round>
    1904:	0f 90       	pop	r0
    1906:	07 fc       	sbrc	r0, 7
    1908:	90 58       	subi	r25, 0x80	; 128
    190a:	08 95       	ret
    190c:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__fp_pscA>
    1910:	60 f0       	brcs	.+24     	; 0x192a <asin+0x54>
    1912:	80 e8       	ldi	r24, 0x80	; 128
    1914:	91 e0       	ldi	r25, 0x01	; 1
    1916:	09 f4       	brne	.+2      	; 0x191a <asin+0x44>
    1918:	9e ef       	ldi	r25, 0xFE	; 254
    191a:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <__fp_pscB>
    191e:	28 f0       	brcs	.+10     	; 0x192a <asin+0x54>
    1920:	40 e8       	ldi	r20, 0x80	; 128
    1922:	51 e0       	ldi	r21, 0x01	; 1
    1924:	71 f4       	brne	.+28     	; 0x1942 <atan2+0x10>
    1926:	5e ef       	ldi	r21, 0xFE	; 254
    1928:	0c c0       	rjmp	.+24     	; 0x1942 <atan2+0x10>
    192a:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__fp_nan>
    192e:	0c 94 75 0e 	jmp	0x1cea	; 0x1cea <__fp_zero>

00001932 <atan2>:
    1932:	e9 2f       	mov	r30, r25
    1934:	e0 78       	andi	r30, 0x80	; 128
    1936:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <__fp_split3>
    193a:	40 f3       	brcs	.-48     	; 0x190c <asin+0x36>
    193c:	09 2e       	mov	r0, r25
    193e:	05 2a       	or	r0, r21
    1940:	b1 f3       	breq	.-20     	; 0x192e <asin+0x58>
    1942:	26 17       	cp	r18, r22
    1944:	37 07       	cpc	r19, r23
    1946:	48 07       	cpc	r20, r24
    1948:	59 07       	cpc	r21, r25
    194a:	38 f0       	brcs	.+14     	; 0x195a <atan2+0x28>
    194c:	0e 2e       	mov	r0, r30
    194e:	07 f8       	bld	r0, 7
    1950:	e0 25       	eor	r30, r0
    1952:	69 f0       	breq	.+26     	; 0x196e <atan2+0x3c>
    1954:	e0 25       	eor	r30, r0
    1956:	e0 64       	ori	r30, 0x40	; 64
    1958:	0a c0       	rjmp	.+20     	; 0x196e <atan2+0x3c>
    195a:	ef 63       	ori	r30, 0x3F	; 63
    195c:	07 f8       	bld	r0, 7
    195e:	00 94       	com	r0
    1960:	07 fa       	bst	r0, 7
    1962:	db 01       	movw	r26, r22
    1964:	b9 01       	movw	r22, r18
    1966:	9d 01       	movw	r18, r26
    1968:	dc 01       	movw	r26, r24
    196a:	ca 01       	movw	r24, r20
    196c:	ad 01       	movw	r20, r26
    196e:	ef 93       	push	r30
    1970:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <__divsf3_pse>
    1974:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_round>
    1978:	0e 94 c9 0c 	call	0x1992	; 0x1992 <atan>
    197c:	5f 91       	pop	r21
    197e:	55 23       	and	r21, r21
    1980:	39 f0       	breq	.+14     	; 0x1990 <atan2+0x5e>
    1982:	2b ed       	ldi	r18, 0xDB	; 219
    1984:	3f e0       	ldi	r19, 0x0F	; 15
    1986:	49 e4       	ldi	r20, 0x49	; 73
    1988:	50 fd       	sbrc	r21, 0
    198a:	49 ec       	ldi	r20, 0xC9	; 201
    198c:	0c 94 ff 0b 	jmp	0x17fe	; 0x17fe <__addsf3>
    1990:	08 95       	ret

00001992 <atan>:
    1992:	df 93       	push	r29
    1994:	dd 27       	eor	r29, r29
    1996:	b9 2f       	mov	r27, r25
    1998:	bf 77       	andi	r27, 0x7F	; 127
    199a:	40 e8       	ldi	r20, 0x80	; 128
    199c:	5f e3       	ldi	r21, 0x3F	; 63
    199e:	16 16       	cp	r1, r22
    19a0:	17 06       	cpc	r1, r23
    19a2:	48 07       	cpc	r20, r24
    19a4:	5b 07       	cpc	r21, r27
    19a6:	18 f4       	brcc	.+6      	; 0x19ae <atan+0x1c>
    19a8:	d9 2f       	mov	r29, r25
    19aa:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <inverse>
    19ae:	9f 93       	push	r25
    19b0:	8f 93       	push	r24
    19b2:	7f 93       	push	r23
    19b4:	6f 93       	push	r22
    19b6:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <square>
    19ba:	e0 ec       	ldi	r30, 0xC0	; 192
    19bc:	f0 e0       	ldi	r31, 0x00	; 0
    19be:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <__fp_powser>
    19c2:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_round>
    19c6:	2f 91       	pop	r18
    19c8:	3f 91       	pop	r19
    19ca:	4f 91       	pop	r20
    19cc:	5f 91       	pop	r21
    19ce:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <__mulsf3x>
    19d2:	dd 23       	and	r29, r29
    19d4:	51 f0       	breq	.+20     	; 0x19ea <atan+0x58>
    19d6:	90 58       	subi	r25, 0x80	; 128
    19d8:	a2 ea       	ldi	r26, 0xA2	; 162
    19da:	2a ed       	ldi	r18, 0xDA	; 218
    19dc:	3f e0       	ldi	r19, 0x0F	; 15
    19de:	49 ec       	ldi	r20, 0xC9	; 201
    19e0:	5f e3       	ldi	r21, 0x3F	; 63
    19e2:	d0 78       	andi	r29, 0x80	; 128
    19e4:	5d 27       	eor	r21, r29
    19e6:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3x>
    19ea:	df 91       	pop	r29
    19ec:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__fp_round>

000019f0 <__cmpsf2>:
    19f0:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <__fp_cmp>
    19f4:	08 f4       	brcc	.+2      	; 0x19f8 <__cmpsf2+0x8>
    19f6:	81 e0       	ldi	r24, 0x01	; 1
    19f8:	08 95       	ret

000019fa <__divsf3>:
    19fa:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <__divsf3x>
    19fe:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__fp_round>
    1a02:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <__fp_pscB>
    1a06:	58 f0       	brcs	.+22     	; 0x1a1e <__divsf3+0x24>
    1a08:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__fp_pscA>
    1a0c:	40 f0       	brcs	.+16     	; 0x1a1e <__divsf3+0x24>
    1a0e:	29 f4       	brne	.+10     	; 0x1a1a <__divsf3+0x20>
    1a10:	5f 3f       	cpi	r21, 0xFF	; 255
    1a12:	29 f0       	breq	.+10     	; 0x1a1e <__divsf3+0x24>
    1a14:	0c 94 f0 0d 	jmp	0x1be0	; 0x1be0 <__fp_inf>
    1a18:	51 11       	cpse	r21, r1
    1a1a:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__fp_szero>
    1a1e:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__fp_nan>

00001a22 <__divsf3x>:
    1a22:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <__fp_split3>
    1a26:	68 f3       	brcs	.-38     	; 0x1a02 <__divsf3+0x8>

00001a28 <__divsf3_pse>:
    1a28:	99 23       	and	r25, r25
    1a2a:	b1 f3       	breq	.-20     	; 0x1a18 <__divsf3+0x1e>
    1a2c:	55 23       	and	r21, r21
    1a2e:	91 f3       	breq	.-28     	; 0x1a14 <__divsf3+0x1a>
    1a30:	95 1b       	sub	r25, r21
    1a32:	55 0b       	sbc	r21, r21
    1a34:	bb 27       	eor	r27, r27
    1a36:	aa 27       	eor	r26, r26
    1a38:	62 17       	cp	r22, r18
    1a3a:	73 07       	cpc	r23, r19
    1a3c:	84 07       	cpc	r24, r20
    1a3e:	38 f0       	brcs	.+14     	; 0x1a4e <__divsf3_pse+0x26>
    1a40:	9f 5f       	subi	r25, 0xFF	; 255
    1a42:	5f 4f       	sbci	r21, 0xFF	; 255
    1a44:	22 0f       	add	r18, r18
    1a46:	33 1f       	adc	r19, r19
    1a48:	44 1f       	adc	r20, r20
    1a4a:	aa 1f       	adc	r26, r26
    1a4c:	a9 f3       	breq	.-22     	; 0x1a38 <__divsf3_pse+0x10>
    1a4e:	35 d0       	rcall	.+106    	; 0x1aba <__divsf3_pse+0x92>
    1a50:	0e 2e       	mov	r0, r30
    1a52:	3a f0       	brmi	.+14     	; 0x1a62 <__divsf3_pse+0x3a>
    1a54:	e0 e8       	ldi	r30, 0x80	; 128
    1a56:	32 d0       	rcall	.+100    	; 0x1abc <__divsf3_pse+0x94>
    1a58:	91 50       	subi	r25, 0x01	; 1
    1a5a:	50 40       	sbci	r21, 0x00	; 0
    1a5c:	e6 95       	lsr	r30
    1a5e:	00 1c       	adc	r0, r0
    1a60:	ca f7       	brpl	.-14     	; 0x1a54 <__divsf3_pse+0x2c>
    1a62:	2b d0       	rcall	.+86     	; 0x1aba <__divsf3_pse+0x92>
    1a64:	fe 2f       	mov	r31, r30
    1a66:	29 d0       	rcall	.+82     	; 0x1aba <__divsf3_pse+0x92>
    1a68:	66 0f       	add	r22, r22
    1a6a:	77 1f       	adc	r23, r23
    1a6c:	88 1f       	adc	r24, r24
    1a6e:	bb 1f       	adc	r27, r27
    1a70:	26 17       	cp	r18, r22
    1a72:	37 07       	cpc	r19, r23
    1a74:	48 07       	cpc	r20, r24
    1a76:	ab 07       	cpc	r26, r27
    1a78:	b0 e8       	ldi	r27, 0x80	; 128
    1a7a:	09 f0       	breq	.+2      	; 0x1a7e <__divsf3_pse+0x56>
    1a7c:	bb 0b       	sbc	r27, r27
    1a7e:	80 2d       	mov	r24, r0
    1a80:	bf 01       	movw	r22, r30
    1a82:	ff 27       	eor	r31, r31
    1a84:	93 58       	subi	r25, 0x83	; 131
    1a86:	5f 4f       	sbci	r21, 0xFF	; 255
    1a88:	3a f0       	brmi	.+14     	; 0x1a98 <__divsf3_pse+0x70>
    1a8a:	9e 3f       	cpi	r25, 0xFE	; 254
    1a8c:	51 05       	cpc	r21, r1
    1a8e:	78 f0       	brcs	.+30     	; 0x1aae <__divsf3_pse+0x86>
    1a90:	0c 94 f0 0d 	jmp	0x1be0	; 0x1be0 <__fp_inf>
    1a94:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__fp_szero>
    1a98:	5f 3f       	cpi	r21, 0xFF	; 255
    1a9a:	e4 f3       	brlt	.-8      	; 0x1a94 <__divsf3_pse+0x6c>
    1a9c:	98 3e       	cpi	r25, 0xE8	; 232
    1a9e:	d4 f3       	brlt	.-12     	; 0x1a94 <__divsf3_pse+0x6c>
    1aa0:	86 95       	lsr	r24
    1aa2:	77 95       	ror	r23
    1aa4:	67 95       	ror	r22
    1aa6:	b7 95       	ror	r27
    1aa8:	f7 95       	ror	r31
    1aaa:	9f 5f       	subi	r25, 0xFF	; 255
    1aac:	c9 f7       	brne	.-14     	; 0x1aa0 <__divsf3_pse+0x78>
    1aae:	88 0f       	add	r24, r24
    1ab0:	91 1d       	adc	r25, r1
    1ab2:	96 95       	lsr	r25
    1ab4:	87 95       	ror	r24
    1ab6:	97 f9       	bld	r25, 7
    1ab8:	08 95       	ret
    1aba:	e1 e0       	ldi	r30, 0x01	; 1
    1abc:	66 0f       	add	r22, r22
    1abe:	77 1f       	adc	r23, r23
    1ac0:	88 1f       	adc	r24, r24
    1ac2:	bb 1f       	adc	r27, r27
    1ac4:	62 17       	cp	r22, r18
    1ac6:	73 07       	cpc	r23, r19
    1ac8:	84 07       	cpc	r24, r20
    1aca:	ba 07       	cpc	r27, r26
    1acc:	20 f0       	brcs	.+8      	; 0x1ad6 <__divsf3_pse+0xae>
    1ace:	62 1b       	sub	r22, r18
    1ad0:	73 0b       	sbc	r23, r19
    1ad2:	84 0b       	sbc	r24, r20
    1ad4:	ba 0b       	sbc	r27, r26
    1ad6:	ee 1f       	adc	r30, r30
    1ad8:	88 f7       	brcc	.-30     	; 0x1abc <__divsf3_pse+0x94>
    1ada:	e0 95       	com	r30
    1adc:	08 95       	ret

00001ade <__floatunsisf>:
    1ade:	e8 94       	clt
    1ae0:	09 c0       	rjmp	.+18     	; 0x1af4 <__floatsisf+0x12>

00001ae2 <__floatsisf>:
    1ae2:	97 fb       	bst	r25, 7
    1ae4:	3e f4       	brtc	.+14     	; 0x1af4 <__floatsisf+0x12>
    1ae6:	90 95       	com	r25
    1ae8:	80 95       	com	r24
    1aea:	70 95       	com	r23
    1aec:	61 95       	neg	r22
    1aee:	7f 4f       	sbci	r23, 0xFF	; 255
    1af0:	8f 4f       	sbci	r24, 0xFF	; 255
    1af2:	9f 4f       	sbci	r25, 0xFF	; 255
    1af4:	99 23       	and	r25, r25
    1af6:	a9 f0       	breq	.+42     	; 0x1b22 <__floatsisf+0x40>
    1af8:	f9 2f       	mov	r31, r25
    1afa:	96 e9       	ldi	r25, 0x96	; 150
    1afc:	bb 27       	eor	r27, r27
    1afe:	93 95       	inc	r25
    1b00:	f6 95       	lsr	r31
    1b02:	87 95       	ror	r24
    1b04:	77 95       	ror	r23
    1b06:	67 95       	ror	r22
    1b08:	b7 95       	ror	r27
    1b0a:	f1 11       	cpse	r31, r1
    1b0c:	f8 cf       	rjmp	.-16     	; 0x1afe <__floatsisf+0x1c>
    1b0e:	fa f4       	brpl	.+62     	; 0x1b4e <__floatsisf+0x6c>
    1b10:	bb 0f       	add	r27, r27
    1b12:	11 f4       	brne	.+4      	; 0x1b18 <__floatsisf+0x36>
    1b14:	60 ff       	sbrs	r22, 0
    1b16:	1b c0       	rjmp	.+54     	; 0x1b4e <__floatsisf+0x6c>
    1b18:	6f 5f       	subi	r22, 0xFF	; 255
    1b1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b1c:	8f 4f       	sbci	r24, 0xFF	; 255
    1b1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b20:	16 c0       	rjmp	.+44     	; 0x1b4e <__floatsisf+0x6c>
    1b22:	88 23       	and	r24, r24
    1b24:	11 f0       	breq	.+4      	; 0x1b2a <__floatsisf+0x48>
    1b26:	96 e9       	ldi	r25, 0x96	; 150
    1b28:	11 c0       	rjmp	.+34     	; 0x1b4c <__floatsisf+0x6a>
    1b2a:	77 23       	and	r23, r23
    1b2c:	21 f0       	breq	.+8      	; 0x1b36 <__floatsisf+0x54>
    1b2e:	9e e8       	ldi	r25, 0x8E	; 142
    1b30:	87 2f       	mov	r24, r23
    1b32:	76 2f       	mov	r23, r22
    1b34:	05 c0       	rjmp	.+10     	; 0x1b40 <__floatsisf+0x5e>
    1b36:	66 23       	and	r22, r22
    1b38:	71 f0       	breq	.+28     	; 0x1b56 <__floatsisf+0x74>
    1b3a:	96 e8       	ldi	r25, 0x86	; 134
    1b3c:	86 2f       	mov	r24, r22
    1b3e:	70 e0       	ldi	r23, 0x00	; 0
    1b40:	60 e0       	ldi	r22, 0x00	; 0
    1b42:	2a f0       	brmi	.+10     	; 0x1b4e <__floatsisf+0x6c>
    1b44:	9a 95       	dec	r25
    1b46:	66 0f       	add	r22, r22
    1b48:	77 1f       	adc	r23, r23
    1b4a:	88 1f       	adc	r24, r24
    1b4c:	da f7       	brpl	.-10     	; 0x1b44 <__floatsisf+0x62>
    1b4e:	88 0f       	add	r24, r24
    1b50:	96 95       	lsr	r25
    1b52:	87 95       	ror	r24
    1b54:	97 f9       	bld	r25, 7
    1b56:	08 95       	ret

00001b58 <__fp_arccos>:
    1b58:	df 93       	push	r29
    1b5a:	cf 93       	push	r28
    1b5c:	1f 93       	push	r17
    1b5e:	0f 93       	push	r16
    1b60:	8b 01       	movw	r16, r22
    1b62:	ec 01       	movw	r28, r24
    1b64:	ed ee       	ldi	r30, 0xED	; 237
    1b66:	f0 e0       	ldi	r31, 0x00	; 0
    1b68:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <__fp_powser>
    1b6c:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_round>
    1b70:	98 01       	movw	r18, r16
    1b72:	ae 01       	movw	r20, r28
    1b74:	8b 01       	movw	r16, r22
    1b76:	ec 01       	movw	r28, r24
    1b78:	60 e0       	ldi	r22, 0x00	; 0
    1b7a:	70 e0       	ldi	r23, 0x00	; 0
    1b7c:	80 e8       	ldi	r24, 0x80	; 128
    1b7e:	9f e3       	ldi	r25, 0x3F	; 63
    1b80:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__subsf3>
    1b84:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <sqrt>
    1b88:	98 01       	movw	r18, r16
    1b8a:	ae 01       	movw	r20, r28
    1b8c:	0f 91       	pop	r16
    1b8e:	1f 91       	pop	r17
    1b90:	cf 91       	pop	r28
    1b92:	df 91       	pop	r29
    1b94:	0c 94 97 0e 	jmp	0x1d2e	; 0x1d2e <__mulsf3x>

00001b98 <__fp_cmp>:
    1b98:	99 0f       	add	r25, r25
    1b9a:	00 08       	sbc	r0, r0
    1b9c:	55 0f       	add	r21, r21
    1b9e:	aa 0b       	sbc	r26, r26
    1ba0:	e0 e8       	ldi	r30, 0x80	; 128
    1ba2:	fe ef       	ldi	r31, 0xFE	; 254
    1ba4:	16 16       	cp	r1, r22
    1ba6:	17 06       	cpc	r1, r23
    1ba8:	e8 07       	cpc	r30, r24
    1baa:	f9 07       	cpc	r31, r25
    1bac:	c0 f0       	brcs	.+48     	; 0x1bde <__fp_cmp+0x46>
    1bae:	12 16       	cp	r1, r18
    1bb0:	13 06       	cpc	r1, r19
    1bb2:	e4 07       	cpc	r30, r20
    1bb4:	f5 07       	cpc	r31, r21
    1bb6:	98 f0       	brcs	.+38     	; 0x1bde <__fp_cmp+0x46>
    1bb8:	62 1b       	sub	r22, r18
    1bba:	73 0b       	sbc	r23, r19
    1bbc:	84 0b       	sbc	r24, r20
    1bbe:	95 0b       	sbc	r25, r21
    1bc0:	39 f4       	brne	.+14     	; 0x1bd0 <__fp_cmp+0x38>
    1bc2:	0a 26       	eor	r0, r26
    1bc4:	61 f0       	breq	.+24     	; 0x1bde <__fp_cmp+0x46>
    1bc6:	23 2b       	or	r18, r19
    1bc8:	24 2b       	or	r18, r20
    1bca:	25 2b       	or	r18, r21
    1bcc:	21 f4       	brne	.+8      	; 0x1bd6 <__fp_cmp+0x3e>
    1bce:	08 95       	ret
    1bd0:	0a 26       	eor	r0, r26
    1bd2:	09 f4       	brne	.+2      	; 0x1bd6 <__fp_cmp+0x3e>
    1bd4:	a1 40       	sbci	r26, 0x01	; 1
    1bd6:	a6 95       	lsr	r26
    1bd8:	8f ef       	ldi	r24, 0xFF	; 255
    1bda:	81 1d       	adc	r24, r1
    1bdc:	81 1d       	adc	r24, r1
    1bde:	08 95       	ret

00001be0 <__fp_inf>:
    1be0:	97 f9       	bld	r25, 7
    1be2:	9f 67       	ori	r25, 0x7F	; 127
    1be4:	80 e8       	ldi	r24, 0x80	; 128
    1be6:	70 e0       	ldi	r23, 0x00	; 0
    1be8:	60 e0       	ldi	r22, 0x00	; 0
    1bea:	08 95       	ret

00001bec <__fp_nan>:
    1bec:	9f ef       	ldi	r25, 0xFF	; 255
    1bee:	80 ec       	ldi	r24, 0xC0	; 192
    1bf0:	08 95       	ret

00001bf2 <__fp_powser>:
    1bf2:	df 93       	push	r29
    1bf4:	cf 93       	push	r28
    1bf6:	1f 93       	push	r17
    1bf8:	0f 93       	push	r16
    1bfa:	ff 92       	push	r15
    1bfc:	ef 92       	push	r14
    1bfe:	df 92       	push	r13
    1c00:	7b 01       	movw	r14, r22
    1c02:	8c 01       	movw	r16, r24
    1c04:	68 94       	set
    1c06:	06 c0       	rjmp	.+12     	; 0x1c14 <__fp_powser+0x22>
    1c08:	da 2e       	mov	r13, r26
    1c0a:	ef 01       	movw	r28, r30
    1c0c:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <__mulsf3x>
    1c10:	fe 01       	movw	r30, r28
    1c12:	e8 94       	clt
    1c14:	a5 91       	lpm	r26, Z+
    1c16:	25 91       	lpm	r18, Z+
    1c18:	35 91       	lpm	r19, Z+
    1c1a:	45 91       	lpm	r20, Z+
    1c1c:	55 91       	lpm	r21, Z+
    1c1e:	a6 f3       	brts	.-24     	; 0x1c08 <__fp_powser+0x16>
    1c20:	ef 01       	movw	r28, r30
    1c22:	0e 94 16 0c 	call	0x182c	; 0x182c <__addsf3x>
    1c26:	fe 01       	movw	r30, r28
    1c28:	97 01       	movw	r18, r14
    1c2a:	a8 01       	movw	r20, r16
    1c2c:	da 94       	dec	r13
    1c2e:	69 f7       	brne	.-38     	; 0x1c0a <__fp_powser+0x18>
    1c30:	df 90       	pop	r13
    1c32:	ef 90       	pop	r14
    1c34:	ff 90       	pop	r15
    1c36:	0f 91       	pop	r16
    1c38:	1f 91       	pop	r17
    1c3a:	cf 91       	pop	r28
    1c3c:	df 91       	pop	r29
    1c3e:	08 95       	ret

00001c40 <__fp_powsodd>:
    1c40:	9f 93       	push	r25
    1c42:	8f 93       	push	r24
    1c44:	7f 93       	push	r23
    1c46:	6f 93       	push	r22
    1c48:	ff 93       	push	r31
    1c4a:	ef 93       	push	r30
    1c4c:	9b 01       	movw	r18, r22
    1c4e:	ac 01       	movw	r20, r24
    1c50:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <__mulsf3>
    1c54:	ef 91       	pop	r30
    1c56:	ff 91       	pop	r31
    1c58:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <__fp_powser>
    1c5c:	2f 91       	pop	r18
    1c5e:	3f 91       	pop	r19
    1c60:	4f 91       	pop	r20
    1c62:	5f 91       	pop	r21
    1c64:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <__mulsf3>

00001c68 <__fp_pscA>:
    1c68:	00 24       	eor	r0, r0
    1c6a:	0a 94       	dec	r0
    1c6c:	16 16       	cp	r1, r22
    1c6e:	17 06       	cpc	r1, r23
    1c70:	18 06       	cpc	r1, r24
    1c72:	09 06       	cpc	r0, r25
    1c74:	08 95       	ret

00001c76 <__fp_pscB>:
    1c76:	00 24       	eor	r0, r0
    1c78:	0a 94       	dec	r0
    1c7a:	12 16       	cp	r1, r18
    1c7c:	13 06       	cpc	r1, r19
    1c7e:	14 06       	cpc	r1, r20
    1c80:	05 06       	cpc	r0, r21
    1c82:	08 95       	ret

00001c84 <__fp_round>:
    1c84:	09 2e       	mov	r0, r25
    1c86:	03 94       	inc	r0
    1c88:	00 0c       	add	r0, r0
    1c8a:	11 f4       	brne	.+4      	; 0x1c90 <__fp_round+0xc>
    1c8c:	88 23       	and	r24, r24
    1c8e:	52 f0       	brmi	.+20     	; 0x1ca4 <__fp_round+0x20>
    1c90:	bb 0f       	add	r27, r27
    1c92:	40 f4       	brcc	.+16     	; 0x1ca4 <__fp_round+0x20>
    1c94:	bf 2b       	or	r27, r31
    1c96:	11 f4       	brne	.+4      	; 0x1c9c <__fp_round+0x18>
    1c98:	60 ff       	sbrs	r22, 0
    1c9a:	04 c0       	rjmp	.+8      	; 0x1ca4 <__fp_round+0x20>
    1c9c:	6f 5f       	subi	r22, 0xFF	; 255
    1c9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1ca0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ca2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca4:	08 95       	ret

00001ca6 <__fp_split3>:
    1ca6:	57 fd       	sbrc	r21, 7
    1ca8:	90 58       	subi	r25, 0x80	; 128
    1caa:	44 0f       	add	r20, r20
    1cac:	55 1f       	adc	r21, r21
    1cae:	59 f0       	breq	.+22     	; 0x1cc6 <__fp_splitA+0x10>
    1cb0:	5f 3f       	cpi	r21, 0xFF	; 255
    1cb2:	71 f0       	breq	.+28     	; 0x1cd0 <__fp_splitA+0x1a>
    1cb4:	47 95       	ror	r20

00001cb6 <__fp_splitA>:
    1cb6:	88 0f       	add	r24, r24
    1cb8:	97 fb       	bst	r25, 7
    1cba:	99 1f       	adc	r25, r25
    1cbc:	61 f0       	breq	.+24     	; 0x1cd6 <__fp_splitA+0x20>
    1cbe:	9f 3f       	cpi	r25, 0xFF	; 255
    1cc0:	79 f0       	breq	.+30     	; 0x1ce0 <__fp_splitA+0x2a>
    1cc2:	87 95       	ror	r24
    1cc4:	08 95       	ret
    1cc6:	12 16       	cp	r1, r18
    1cc8:	13 06       	cpc	r1, r19
    1cca:	14 06       	cpc	r1, r20
    1ccc:	55 1f       	adc	r21, r21
    1cce:	f2 cf       	rjmp	.-28     	; 0x1cb4 <__fp_split3+0xe>
    1cd0:	46 95       	lsr	r20
    1cd2:	f1 df       	rcall	.-30     	; 0x1cb6 <__fp_splitA>
    1cd4:	08 c0       	rjmp	.+16     	; 0x1ce6 <__fp_splitA+0x30>
    1cd6:	16 16       	cp	r1, r22
    1cd8:	17 06       	cpc	r1, r23
    1cda:	18 06       	cpc	r1, r24
    1cdc:	99 1f       	adc	r25, r25
    1cde:	f1 cf       	rjmp	.-30     	; 0x1cc2 <__fp_splitA+0xc>
    1ce0:	86 95       	lsr	r24
    1ce2:	71 05       	cpc	r23, r1
    1ce4:	61 05       	cpc	r22, r1
    1ce6:	08 94       	sec
    1ce8:	08 95       	ret

00001cea <__fp_zero>:
    1cea:	e8 94       	clt

00001cec <__fp_szero>:
    1cec:	bb 27       	eor	r27, r27
    1cee:	66 27       	eor	r22, r22
    1cf0:	77 27       	eor	r23, r23
    1cf2:	cb 01       	movw	r24, r22
    1cf4:	97 f9       	bld	r25, 7
    1cf6:	08 95       	ret

00001cf8 <inverse>:
    1cf8:	9b 01       	movw	r18, r22
    1cfa:	ac 01       	movw	r20, r24
    1cfc:	60 e0       	ldi	r22, 0x00	; 0
    1cfe:	70 e0       	ldi	r23, 0x00	; 0
    1d00:	80 e8       	ldi	r24, 0x80	; 128
    1d02:	9f e3       	ldi	r25, 0x3F	; 63
    1d04:	0c 94 fd 0c 	jmp	0x19fa	; 0x19fa <__divsf3>

00001d08 <__mulsf3>:
    1d08:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <__mulsf3x>
    1d0c:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__fp_round>
    1d10:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__fp_pscA>
    1d14:	38 f0       	brcs	.+14     	; 0x1d24 <__mulsf3+0x1c>
    1d16:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <__fp_pscB>
    1d1a:	20 f0       	brcs	.+8      	; 0x1d24 <__mulsf3+0x1c>
    1d1c:	95 23       	and	r25, r21
    1d1e:	11 f0       	breq	.+4      	; 0x1d24 <__mulsf3+0x1c>
    1d20:	0c 94 f0 0d 	jmp	0x1be0	; 0x1be0 <__fp_inf>
    1d24:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__fp_nan>
    1d28:	11 24       	eor	r1, r1
    1d2a:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__fp_szero>

00001d2e <__mulsf3x>:
    1d2e:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <__fp_split3>
    1d32:	70 f3       	brcs	.-36     	; 0x1d10 <__mulsf3+0x8>

00001d34 <__mulsf3_pse>:
    1d34:	95 9f       	mul	r25, r21
    1d36:	c1 f3       	breq	.-16     	; 0x1d28 <__mulsf3+0x20>
    1d38:	95 0f       	add	r25, r21
    1d3a:	50 e0       	ldi	r21, 0x00	; 0
    1d3c:	55 1f       	adc	r21, r21
    1d3e:	62 9f       	mul	r22, r18
    1d40:	f0 01       	movw	r30, r0
    1d42:	72 9f       	mul	r23, r18
    1d44:	bb 27       	eor	r27, r27
    1d46:	f0 0d       	add	r31, r0
    1d48:	b1 1d       	adc	r27, r1
    1d4a:	63 9f       	mul	r22, r19
    1d4c:	aa 27       	eor	r26, r26
    1d4e:	f0 0d       	add	r31, r0
    1d50:	b1 1d       	adc	r27, r1
    1d52:	aa 1f       	adc	r26, r26
    1d54:	64 9f       	mul	r22, r20
    1d56:	66 27       	eor	r22, r22
    1d58:	b0 0d       	add	r27, r0
    1d5a:	a1 1d       	adc	r26, r1
    1d5c:	66 1f       	adc	r22, r22
    1d5e:	82 9f       	mul	r24, r18
    1d60:	22 27       	eor	r18, r18
    1d62:	b0 0d       	add	r27, r0
    1d64:	a1 1d       	adc	r26, r1
    1d66:	62 1f       	adc	r22, r18
    1d68:	73 9f       	mul	r23, r19
    1d6a:	b0 0d       	add	r27, r0
    1d6c:	a1 1d       	adc	r26, r1
    1d6e:	62 1f       	adc	r22, r18
    1d70:	83 9f       	mul	r24, r19
    1d72:	a0 0d       	add	r26, r0
    1d74:	61 1d       	adc	r22, r1
    1d76:	22 1f       	adc	r18, r18
    1d78:	74 9f       	mul	r23, r20
    1d7a:	33 27       	eor	r19, r19
    1d7c:	a0 0d       	add	r26, r0
    1d7e:	61 1d       	adc	r22, r1
    1d80:	23 1f       	adc	r18, r19
    1d82:	84 9f       	mul	r24, r20
    1d84:	60 0d       	add	r22, r0
    1d86:	21 1d       	adc	r18, r1
    1d88:	82 2f       	mov	r24, r18
    1d8a:	76 2f       	mov	r23, r22
    1d8c:	6a 2f       	mov	r22, r26
    1d8e:	11 24       	eor	r1, r1
    1d90:	9f 57       	subi	r25, 0x7F	; 127
    1d92:	50 40       	sbci	r21, 0x00	; 0
    1d94:	9a f0       	brmi	.+38     	; 0x1dbc <__mulsf3_pse+0x88>
    1d96:	f1 f0       	breq	.+60     	; 0x1dd4 <__mulsf3_pse+0xa0>
    1d98:	88 23       	and	r24, r24
    1d9a:	4a f0       	brmi	.+18     	; 0x1dae <__mulsf3_pse+0x7a>
    1d9c:	ee 0f       	add	r30, r30
    1d9e:	ff 1f       	adc	r31, r31
    1da0:	bb 1f       	adc	r27, r27
    1da2:	66 1f       	adc	r22, r22
    1da4:	77 1f       	adc	r23, r23
    1da6:	88 1f       	adc	r24, r24
    1da8:	91 50       	subi	r25, 0x01	; 1
    1daa:	50 40       	sbci	r21, 0x00	; 0
    1dac:	a9 f7       	brne	.-22     	; 0x1d98 <__mulsf3_pse+0x64>
    1dae:	9e 3f       	cpi	r25, 0xFE	; 254
    1db0:	51 05       	cpc	r21, r1
    1db2:	80 f0       	brcs	.+32     	; 0x1dd4 <__mulsf3_pse+0xa0>
    1db4:	0c 94 f0 0d 	jmp	0x1be0	; 0x1be0 <__fp_inf>
    1db8:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__fp_szero>
    1dbc:	5f 3f       	cpi	r21, 0xFF	; 255
    1dbe:	e4 f3       	brlt	.-8      	; 0x1db8 <__mulsf3_pse+0x84>
    1dc0:	98 3e       	cpi	r25, 0xE8	; 232
    1dc2:	d4 f3       	brlt	.-12     	; 0x1db8 <__mulsf3_pse+0x84>
    1dc4:	86 95       	lsr	r24
    1dc6:	77 95       	ror	r23
    1dc8:	67 95       	ror	r22
    1dca:	b7 95       	ror	r27
    1dcc:	f7 95       	ror	r31
    1dce:	e7 95       	ror	r30
    1dd0:	9f 5f       	subi	r25, 0xFF	; 255
    1dd2:	c1 f7       	brne	.-16     	; 0x1dc4 <__mulsf3_pse+0x90>
    1dd4:	fe 2b       	or	r31, r30
    1dd6:	88 0f       	add	r24, r24
    1dd8:	91 1d       	adc	r25, r1
    1dda:	96 95       	lsr	r25
    1ddc:	87 95       	ror	r24
    1dde:	97 f9       	bld	r25, 7
    1de0:	08 95       	ret
    1de2:	19 f4       	brne	.+6      	; 0x1dea <__mulsf3_pse+0xb6>
    1de4:	16 f4       	brtc	.+4      	; 0x1dea <__mulsf3_pse+0xb6>
    1de6:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__fp_nan>
    1dea:	0c 94 3b 0f 	jmp	0x1e76	; 0x1e76 <__fp_mpack>

00001dee <sqrt>:
    1dee:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__fp_splitA>
    1df2:	b8 f3       	brcs	.-18     	; 0x1de2 <__mulsf3_pse+0xae>
    1df4:	99 23       	and	r25, r25
    1df6:	c9 f3       	breq	.-14     	; 0x1dea <__mulsf3_pse+0xb6>
    1df8:	b6 f3       	brts	.-20     	; 0x1de6 <__mulsf3_pse+0xb2>
    1dfa:	9f 57       	subi	r25, 0x7F	; 127
    1dfc:	55 0b       	sbc	r21, r21
    1dfe:	87 ff       	sbrs	r24, 7
    1e00:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <__fp_norm2>
    1e04:	00 24       	eor	r0, r0
    1e06:	a0 e6       	ldi	r26, 0x60	; 96
    1e08:	40 ea       	ldi	r20, 0xA0	; 160
    1e0a:	90 01       	movw	r18, r0
    1e0c:	80 58       	subi	r24, 0x80	; 128
    1e0e:	56 95       	lsr	r21
    1e10:	97 95       	ror	r25
    1e12:	28 f4       	brcc	.+10     	; 0x1e1e <sqrt+0x30>
    1e14:	80 5c       	subi	r24, 0xC0	; 192
    1e16:	66 0f       	add	r22, r22
    1e18:	77 1f       	adc	r23, r23
    1e1a:	88 1f       	adc	r24, r24
    1e1c:	20 f0       	brcs	.+8      	; 0x1e26 <sqrt+0x38>
    1e1e:	26 17       	cp	r18, r22
    1e20:	37 07       	cpc	r19, r23
    1e22:	48 07       	cpc	r20, r24
    1e24:	30 f4       	brcc	.+12     	; 0x1e32 <sqrt+0x44>
    1e26:	62 1b       	sub	r22, r18
    1e28:	73 0b       	sbc	r23, r19
    1e2a:	84 0b       	sbc	r24, r20
    1e2c:	20 29       	or	r18, r0
    1e2e:	31 29       	or	r19, r1
    1e30:	4a 2b       	or	r20, r26
    1e32:	a6 95       	lsr	r26
    1e34:	17 94       	ror	r1
    1e36:	07 94       	ror	r0
    1e38:	20 25       	eor	r18, r0
    1e3a:	31 25       	eor	r19, r1
    1e3c:	4a 27       	eor	r20, r26
    1e3e:	58 f7       	brcc	.-42     	; 0x1e16 <sqrt+0x28>
    1e40:	66 0f       	add	r22, r22
    1e42:	77 1f       	adc	r23, r23
    1e44:	88 1f       	adc	r24, r24
    1e46:	20 f0       	brcs	.+8      	; 0x1e50 <sqrt+0x62>
    1e48:	26 17       	cp	r18, r22
    1e4a:	37 07       	cpc	r19, r23
    1e4c:	48 07       	cpc	r20, r24
    1e4e:	30 f4       	brcc	.+12     	; 0x1e5c <sqrt+0x6e>
    1e50:	62 0b       	sbc	r22, r18
    1e52:	73 0b       	sbc	r23, r19
    1e54:	84 0b       	sbc	r24, r20
    1e56:	20 0d       	add	r18, r0
    1e58:	31 1d       	adc	r19, r1
    1e5a:	41 1d       	adc	r20, r1
    1e5c:	a0 95       	com	r26
    1e5e:	81 f7       	brne	.-32     	; 0x1e40 <sqrt+0x52>
    1e60:	b9 01       	movw	r22, r18
    1e62:	84 2f       	mov	r24, r20
    1e64:	91 58       	subi	r25, 0x81	; 129
    1e66:	88 0f       	add	r24, r24
    1e68:	96 95       	lsr	r25
    1e6a:	87 95       	ror	r24
    1e6c:	08 95       	ret

00001e6e <square>:
    1e6e:	9b 01       	movw	r18, r22
    1e70:	ac 01       	movw	r20, r24
    1e72:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <__mulsf3>

00001e76 <__fp_mpack>:
    1e76:	9f 3f       	cpi	r25, 0xFF	; 255
    1e78:	31 f0       	breq	.+12     	; 0x1e86 <__fp_mpack_finite+0xc>

00001e7a <__fp_mpack_finite>:
    1e7a:	91 50       	subi	r25, 0x01	; 1
    1e7c:	20 f4       	brcc	.+8      	; 0x1e86 <__fp_mpack_finite+0xc>
    1e7e:	87 95       	ror	r24
    1e80:	77 95       	ror	r23
    1e82:	67 95       	ror	r22
    1e84:	b7 95       	ror	r27
    1e86:	88 0f       	add	r24, r24
    1e88:	91 1d       	adc	r25, r1
    1e8a:	96 95       	lsr	r25
    1e8c:	87 95       	ror	r24
    1e8e:	97 f9       	bld	r25, 7
    1e90:	08 95       	ret

00001e92 <__fp_norm2>:
    1e92:	91 50       	subi	r25, 0x01	; 1
    1e94:	50 40       	sbci	r21, 0x00	; 0
    1e96:	66 0f       	add	r22, r22
    1e98:	77 1f       	adc	r23, r23
    1e9a:	88 1f       	adc	r24, r24
    1e9c:	d2 f7       	brpl	.-12     	; 0x1e92 <__fp_norm2>
    1e9e:	08 95       	ret

00001ea0 <_exit>:
    1ea0:	f8 94       	cli

00001ea2 <__stop_program>:
    1ea2:	ff cf       	rjmp	.-2      	; 0x1ea2 <__stop_program>
